type EncryptAlgorithm = "AES-CBC";
type EncryptSecret = JsonWebKey;
declare const defaultEncryptAlgorithm: EncryptAlgorithm;
declare const importEncryptSecret: (secret?: string, encryptAlgorithm?: EncryptAlgorithm | "") => Promise<EncryptSecret>;
/**
 * Create a new CSRF token
 */
declare const create: (secret: string, encryptSecret: EncryptSecret, encryptAlgorithm?: EncryptAlgorithm | "") => Promise<string>;
/**
 * Check csrf token
 */
declare const verify: (secret: string, token: string, encryptSecret: EncryptSecret, encryptAlgorithm?: EncryptAlgorithm | "") => Promise<boolean>;
/**
 * Create cryptographic random value
 */
declare const randomSecret: () => `${string}-${string}-${string}-${string}-${string}`;

export { EncryptAlgorithm, EncryptSecret, create, defaultEncryptAlgorithm, importEncryptSecret, randomSecret, verify };
