{"version":3,"file":"sync-vuestic.cjs","sources":["../sync-vuestic.ts"],"sourcesContent":["import {\n  convertValueToString,\n  tailwindConfigPath,\n  tailwindConfigFilename,\n  defaultTailwindConfigFilename,\n} from './helpers/helpers'\nimport { convertVuesticThresholds } from './modules/breakpoint'\nimport { convertVuesticColors } from './modules/colors'\n\nconst fs = require('fs')\n\nconst defaultTailwindConfig = {\n  content: [],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n\n/**\n * @description writes tailwind config to the file\n * @param config tailwind config in raw string format\n */\nconst updateTailwindConfig = (config?: string) => {\n  try {\n    const tailwindConfig = `module.exports = ${config ?? convertValueToString(defaultTailwindConfig)}`\n\n    fs.writeFileSync(tailwindConfigFilename || defaultTailwindConfigFilename, tailwindConfig)\n\n    console.log(`${tailwindConfigFilename || defaultTailwindConfigFilename} was successfully synchronized with Vuestic UI config!`)\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * @description forming tailwind config file from vuestic default presets\n */\nexport const integrateVuesticConfig = async () => {\n    if (!tailwindConfigPath) { console.log('Tailwind CSS config file not found. Proceeding with default config.') }\n    const tailwindConfig = tailwindConfigPath ? (await (() => import(tailwindConfigPath))()).default : defaultTailwindConfig\n\n    tailwindConfig.theme ||= {}\n    tailwindConfig.theme.extend ||= {}\n    tailwindConfig.theme.extend.colors ||= {}\n    tailwindConfig.theme.extend.screens ||= {}\n\n    tailwindConfig.theme.extend.colors = convertVuesticColors(tailwindConfig)\n    tailwindConfig.theme.extend.screens = convertVuesticThresholds(tailwindConfig)\n\n    updateTailwindConfig(convertValueToString(tailwindConfig))\n  }\n"],"names":["fs","require","defaultTailwindConfig","content","theme","extend","plugins","async","tailwindConfigPath","console","log","tailwindConfig","__vitePreload","import","default","_a","_b","colors","_c","screens","convertVuesticColors","convertVuesticThresholds","config","convertValueToString","writeFileSync","tailwindConfigFilename","defaultTailwindConfigFilename","e"],"mappings":"sJASA,MAAMA,EAAKC,QAAQ,MAEbC,EAAwB,CAC5BC,QAAS,GACTC,MAAO,CACLC,OAAQ,CAAC,GAEXC,QAAS,mCAsB2BC,oBAC7BC,EAAAA,oBAAsBC,QAAQC,IAAI,uEACvC,MAAMC,EAAiBH,EAAAA,0BAAmCI,EAAAA,eAAA,IAAAC,OAAOL,EAAAA,0BAAA,IAAwBM,QAAUZ,EAEpFS,EAAAP,QAAfO,EAAeP,MAAU,KACVW,EAAAJ,EAAAP,OAAMC,SAANU,EAAMV,OAAW,KACjBW,EAAAL,EAAAP,MAAMC,QAAOY,SAAbD,EAAaC,OAAW,CAAA,IACxBC,EAAAP,EAAAP,MAAMC,QAAOc,UAAbD,EAAaC,QAAY,CAAA,GAExCR,EAAeP,MAAMC,OAAOY,OAASG,EAAAA,qBAAqBT,GAC1DA,EAAeP,MAAMC,OAAOc,QAAUE,EAAAA,yBAAyBV,GAzBtC,CAACW,IACxB,IACF,MAAMX,EAAiB,oBAAoBW,GAAUC,EAAAA,qBAAqBrB,KAEvEF,EAAAwB,cAAcC,EAAAA,wBAA0BC,EAAAA,8BAA+Bf,GAElEF,QAAAC,IAAI,GAAGe,EAAAA,wBAA0BC,EAAqFA,6FACvHC,GACPlB,QAAQC,IAAIiB,EACd,GAkBuBJ,CAAAA,EAAAA,qBAAqBZ,GAAe"}