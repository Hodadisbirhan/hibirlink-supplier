{
  "version": 3,
  "sources": ["../../../../leaflet-geosearch/src/domUtils.ts", "../../../../leaflet-geosearch/src/constants.ts", "../../../../leaflet-geosearch/src/SearchElement.ts", "../../../../leaflet-geosearch/src/resultList.ts", "../../../../leaflet-geosearch/src/SearchControl.ts", "../../../../leaflet-geosearch/src/lib/debounce.ts", "../../../../leaflet-geosearch/src/providers/provider.ts", "../../../../leaflet-geosearch/src/providers/algoliaProvider.ts", "../../../../leaflet-geosearch/src/providers/bingProvider.ts", "../../../../leaflet-geosearch/src/providers/esriProvider.ts", "../../../../leaflet-geosearch/src/providers/peliasProvider.ts", "../../../../leaflet-geosearch/src/providers/geocodeEarthProvider.ts", "../../../../leaflet-geosearch/node_modules/@googlemaps/js-api-loader/dist/index.mjs", "../../../../leaflet-geosearch/src/providers/googleProvider.ts", "../../../../leaflet-geosearch/src/providers/legacyGoogleProvider.ts", "../../../../leaflet-geosearch/src/providers/hereProvider.ts", "../../../../leaflet-geosearch/src/providers/openStreetMapProvider.ts", "../../../../leaflet-geosearch/src/providers/locationIQProvider.ts", "../../../../leaflet-geosearch/src/providers/openCageProvider.ts", "../../../../leaflet-geosearch/src/providers/civilDefenseMapProvider.ts", "../../../../leaflet-geosearch/src/providers/mapBoxProvider.ts", "../../../../leaflet-geosearch/src/providers/geoApiFrProvider.ts", "../../../../leaflet-geosearch/src/providers/geoapifyProvider.ts"],
  "sourcesContent": ["export function createElement<T extends HTMLElement = HTMLElement>(\n  element: string,\n  className: string | null = '',\n  parent?: Element | null,\n  attributes: { [key: string]: string | ((event: any) => void) } = {},\n): T {\n  const el = document.createElement(element) as T;\n\n  if (className) {\n    el.className = className;\n  }\n\n  Object.keys(attributes).forEach((key) => {\n    if (typeof attributes[key] === 'function') {\n      // IE doesn't support startsWith\n      const type = (\n        key.indexOf('on') === 0 ? key.substr(2).toLowerCase() : key\n      ) as keyof HTMLElementEventMap;\n      el.addEventListener(type, attributes[key] as () => void);\n    } else if (key === 'html') {\n      el.innerHTML = attributes[key] as string;\n    } else if (key === 'text') {\n      el.innerText = attributes[key] as string;\n    } else {\n      el.setAttribute(key, attributes[key] as string);\n    }\n  });\n\n  if (parent) {\n    parent.appendChild(el);\n  }\n\n  return el;\n}\n\nexport function stopPropagation(event: Event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport function createScriptElement<T = object>(\n  url: string,\n  cb: string,\n): Promise<T> {\n  const script = createElement('script', null, document.body);\n  script.setAttribute('type', 'text/javascript');\n\n  return new Promise((resolve) => {\n    (window as any)[cb] = (json: T): void => {\n      script.remove();\n      delete (window as any)[cb];\n      resolve(json);\n    };\n\n    script.setAttribute('src', url);\n  });\n}\n\nexport const cx = (...classNames: (string | undefined)[]): string =>\n  classNames.filter(Boolean).join(' ').trim();\n\nexport function addClassName(\n  element: Element | null,\n  className: string | string[],\n): void {\n  if (!element || !element.classList) {\n    return;\n  }\n\n  // IE doesn't support adding multiple classes at once :(\n  const classNames = Array.isArray(className) ? className : [className];\n  classNames.forEach((name) => {\n    if (!element.classList.contains(name)) {\n      element.classList.add(name);\n    }\n  });\n}\n\nexport function removeClassName(\n  element: Element | null,\n  className: string | string[],\n): void {\n  if (!element || !element.classList) {\n    return;\n  }\n\n  // IE doesn't support removing multiple classes at once :(\n  const classNames = Array.isArray(className) ? className : [className];\n  classNames.forEach((name) => {\n    if (element.classList.contains(name)) {\n      element.classList.remove(name);\n    }\n  });\n}\n\nexport function replaceClassName(\n  element: Element,\n  find: string,\n  replace: string,\n): void {\n  removeClassName(element, find);\n  addClassName(element, replace);\n}\n", "export const ENTER_KEY = 13;\nexport const ESCAPE_KEY = 27;\nexport const ARROW_DOWN_KEY = 40;\nexport const ARROW_UP_KEY = 38;\nexport const ARROW_LEFT_KEY = 37;\nexport const ARROW_RIGHT_KEY = 39;\n\nexport const SPECIAL_KEYS = [\n  ENTER_KEY,\n  ESCAPE_KEY,\n  ARROW_DOWN_KEY,\n  ARROW_UP_KEY,\n  ARROW_LEFT_KEY,\n  ARROW_RIGHT_KEY,\n];\n", "import {\n  createElement,\n  addClassName,\n  removeClassName,\n  cx,\n  stopPropagation,\n  replaceClassName,\n} from './domUtils';\n\nimport { ESCAPE_KEY, ENTER_KEY } from './constants';\n\ninterface SearchElementProps {\n  searchLabel?: string;\n  handleSubmit: (args: { query: string }) => void;\n  classNames?: {\n    container?: string;\n    form?: string;\n    input?: string;\n  };\n}\n\nexport default class SearchElement {\n  container: HTMLDivElement;\n  form: HTMLFormElement;\n  input: HTMLInputElement;\n  handleSubmit: (args: { query: string }) => void;\n  hasError = false;\n\n  constructor({\n    handleSubmit,\n    searchLabel,\n    classNames = {},\n  }: SearchElementProps) {\n    this.container = createElement<HTMLDivElement>(\n      'div',\n      cx('geosearch', classNames.container),\n    );\n\n    this.form = createElement<HTMLFormElement>(\n      'form',\n      ['', classNames.form].join(' '),\n      this.container,\n      {\n        autocomplete: 'none',\n        onClick: stopPropagation,\n        onDblClick: stopPropagation,\n        touchStart: stopPropagation,\n        touchEnd: stopPropagation,\n      },\n    );\n\n    this.input = createElement<HTMLInputElement>(\n      'input',\n      ['glass', classNames.input].join(' '),\n      this.form,\n      {\n        type: 'text',\n        placeholder: searchLabel || 'search',\n        onInput: this.onInput,\n        onKeyUp: (e) => this.onKeyUp(e),\n        onKeyPress: (e) => this.onKeyPress(e),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n\n        // For some reason, leaflet is blocking the 'touchstart', manually give\n        // focus to the input onClick\n        // > Ignored attempt to cancel a touchstart event with cancelable=false,\n        // > for example because scrolling is in progress and cannot be interrupted.\n        onClick: () => {\n          this.input.focus();\n          this.input.dispatchEvent(new Event('focus'));\n        },\n      },\n    );\n\n    this.handleSubmit = handleSubmit;\n  }\n\n  onFocus(): void {\n    addClassName(this.form, 'active');\n  }\n\n  onBlur(): void {\n    removeClassName(this.form, 'active');\n  }\n\n  async onSubmit(event: Event): Promise<void> {\n    stopPropagation(event);\n    replaceClassName(this.container, 'error', 'pending');\n\n    await this.handleSubmit({ query: this.input.value });\n    removeClassName(this.container, 'pending');\n  }\n\n  onInput(): void {\n    if (!this.hasError) {\n      return;\n    }\n\n    removeClassName(this.container, 'error');\n    this.hasError = false;\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    if (event.keyCode !== ESCAPE_KEY) {\n      return;\n    }\n\n    removeClassName(this.container, ['pending', 'active']);\n\n    this.input.value = '';\n\n    document.body.focus();\n    document.body.blur();\n  }\n\n  onKeyPress(event: KeyboardEvent): void {\n    if (event.keyCode !== ENTER_KEY) {\n      return;\n    }\n\n    this.onSubmit(event);\n  }\n\n  setQuery(query: string): void {\n    this.input.value = query;\n  }\n}\n", "import { createElement, addClassName, removeClassName, cx } from './domUtils';\nimport { SearchResult } from './providers/provider';\n\ninterface ResultListProps {\n  handleClick: (args: { result: SearchResult }) => void;\n  classNames?: {\n    resultlist?: string;\n    item?: string;\n    notfound?: string;\n  };\n  notFoundMessage?: string;\n}\n\nexport default class ResultList {\n  handleClick?: (args: { result: SearchResult }) => void;\n  selected = -1;\n  results: SearchResult[] = [];\n\n  container: HTMLDivElement;\n  resultItem: HTMLDivElement;\n  notFoundMessage?: HTMLDivElement;\n\n  constructor({\n    handleClick,\n    classNames = {},\n    notFoundMessage,\n  }: ResultListProps) {\n    this.handleClick = handleClick;\n    this.notFoundMessage = !!notFoundMessage\n      ? createElement<HTMLDivElement>(\n          'div',\n          cx(classNames.notfound),\n          undefined,\n          { html: notFoundMessage! },\n        )\n      : undefined;\n\n    this.container = createElement<HTMLDivElement>(\n      'div',\n      cx('results', classNames.resultlist),\n    );\n    this.container.addEventListener('click', this.onClick, true);\n\n    this.resultItem = createElement<HTMLDivElement>('div', cx(classNames.item));\n  }\n\n  render(\n    results: SearchResult[] = [],\n    resultFormat: (args: { result: SearchResult }) => string,\n  ): void {\n    this.clear();\n\n    results.forEach((result, idx) => {\n      const child = this.resultItem.cloneNode(true) as HTMLDivElement;\n      child.setAttribute('data-key', `${idx}`);\n      child.innerHTML = resultFormat({ result });\n      this.container.appendChild(child);\n    });\n\n    if (results.length > 0) {\n      addClassName(this.container.parentElement, 'open');\n      addClassName(this.container, 'active');\n    } else if (!!this.notFoundMessage) {\n      this.container.appendChild(this.notFoundMessage);\n      addClassName(this.container.parentElement, 'open');\n    }\n\n    this.results = results;\n  }\n\n  select(index: number): SearchResult {\n    // eslint-disable-next-line no-confusing-arrow\n    Array.from(this.container.children).forEach((child, idx) =>\n      idx === index\n        ? addClassName(child, 'active')\n        : removeClassName(child, 'active'),\n    );\n\n    this.selected = index;\n    return this.results[index];\n  }\n\n  count(): number {\n    return this.results ? this.results.length : 0;\n  }\n\n  clear(): void {\n    this.selected = -1;\n\n    while (this.container.lastChild) {\n      this.container.removeChild(this.container.lastChild);\n    }\n\n    removeClassName(this.container.parentElement, 'open');\n    removeClassName(this.container, 'active');\n  }\n\n  onClick = (event: Event): void => {\n    if (typeof this.handleClick !== 'function') {\n      return;\n    }\n\n    const target = event.target as HTMLDivElement;\n    if (\n      !target ||\n      !this.container.contains(target) ||\n      !target.hasAttribute('data-key')\n    ) {\n      return;\n    }\n\n    const idx = Number(target.getAttribute('data-key'));\n    this.handleClick({ result: this.results[idx] });\n  };\n}\n", "import * as L from 'leaflet';\nimport { ControlPosition, FeatureGroup, MarkerOptions, Map } from 'leaflet';\nimport SearchElement from './SearchElement';\nimport ResultList from './resultList';\nimport debounce from './lib/debounce';\n\nimport {\n  createElement,\n  addClassName,\n  removeClassName,\n  stopPropagation,\n} from './domUtils';\nimport {\n  ENTER_KEY,\n  SPECIAL_KEYS,\n  ARROW_UP_KEY,\n  ARROW_DOWN_KEY,\n  ESCAPE_KEY,\n} from './constants';\nimport AbstractProvider, { SearchResult } from './providers/provider';\nimport { Provider } from './providers';\n\nconst defaultOptions: Omit<SearchControlProps, 'provider'> = {\n  position: 'topleft',\n  style: 'button',\n  showMarker: true,\n  showPopup: false,\n  popupFormat: ({ result }) => `${result.label}`,\n  resultFormat: ({ result }) => `${result.label}`,\n  marker: {\n    icon: L && L.Icon ? new L.Icon.Default() : undefined,\n    draggable: false,\n  },\n  maxMarkers: 1,\n  maxSuggestions: 5,\n  retainZoomLevel: false,\n  animateZoom: true,\n  searchLabel: 'Enter address',\n  clearSearchLabel: 'Clear search',\n  notFoundMessage: '',\n  messageHideDelay: 3000,\n  zoomLevel: 18,\n  classNames: {\n    container: 'leaflet-bar leaflet-control leaflet-control-geosearch',\n    button: 'leaflet-bar-part leaflet-bar-part-single',\n    resetButton: 'reset',\n    msgbox: 'leaflet-bar message',\n    form: '',\n    input: '',\n    resultlist: '',\n    item: '',\n    notfound: 'leaflet-bar-notfound',\n  },\n  autoComplete: true,\n  autoCompleteDelay: 250,\n  autoClose: false,\n  keepResult: false,\n  updateMap: true,\n};\n\nconst UNINITIALIZED_ERR =\n  'Leaflet must be loaded before instantiating the GeoSearch control';\n\ninterface SearchControlProps {\n  /** the provider to use for searching */\n  provider: Provider;\n  /** the leaflet position to render the element in */\n  position: ControlPosition;\n  /**\n   * the stye of the search element\n   * @default bar\n   **/\n  style: 'button' | 'bar';\n\n  marker: MarkerOptions;\n  maxMarkers: number;\n  showMarker: boolean;\n  showPopup: boolean;\n  popupFormat<T = any>(args: {\n    query: Selection;\n    result: SearchResult<T>;\n  }): string;\n\n  resultFormat<T = any>(args: { result: SearchResult<T> }): string;\n\n  searchLabel: string;\n  clearSearchLabel: string;\n  notFoundMessage: string;\n  messageHideDelay: number;\n\n  animateZoom: boolean;\n  zoomLevel: number;\n  retainZoomLevel: boolean;\n\n  classNames: {\n    container: string;\n    button: string;\n    resetButton: string;\n    msgbox: string;\n    form: string;\n    input: string;\n    resultlist: string;\n    item: string;\n    notfound: string;\n  };\n\n  autoComplete: boolean;\n  autoCompleteDelay: number;\n  maxSuggestions: number;\n  autoClose: boolean;\n  keepResult: boolean;\n  updateMap: boolean;\n}\n\nexport type SearchControlOptions = Partial<SearchControlProps> & {\n  provider: Provider;\n};\n\ninterface Selection {\n  query: string;\n  data?: SearchResult;\n}\n\ninterface SearchControl {\n  options: Omit<SearchControlProps, 'provider'> & {\n    provider?: SearchControlProps['provider'];\n  };\n  markers: FeatureGroup;\n  searchElement: SearchElement;\n  resultList: ResultList;\n  classNames: SearchControlProps['classNames'];\n  container: HTMLDivElement;\n  input: HTMLInputElement;\n  button: HTMLAnchorElement;\n  resetButton: HTMLAnchorElement;\n  map: Map;\n\n  // [key: string]: any;\n  initialize(options: SearchControlProps): void;\n  onSubmit(result: Selection): void;\n  open(): void;\n  close(): void;\n  onClick(event: Event): void;\n  clearResults(event?: KeyboardEvent | null, force?: boolean): void;\n  autoSearch(event: KeyboardEvent): void;\n  selectResult(event: KeyboardEvent): void;\n  showResult(result: SearchResult, query: Selection): void;\n  addMarker(result: SearchResult, selection: Selection): void;\n  centerMap(result: SearchResult): void;\n  closeResults(): void;\n  getZoom(): number;\n  onAdd(map: Map): HTMLDivElement;\n  onRemove(): SearchControl;\n}\n\n// @ts-ignore\nconst Control: SearchControl = {\n  options: { ...defaultOptions },\n  classNames: { ...defaultOptions.classNames },\n\n  initialize(options: SearchControlOptions) {\n    if (!L) {\n      throw new Error(UNINITIALIZED_ERR);\n    }\n\n    if (!options.provider) {\n      throw new Error('Provider is missing from options');\n    }\n\n    // merge given options with control defaults\n    this.options = { ...defaultOptions, ...options };\n    this.classNames = { ...this.classNames, ...options.classNames };\n\n    this.markers = new L.FeatureGroup();\n    this.classNames.container += ` leaflet-geosearch-${this.options.style}`;\n\n    this.searchElement = new SearchElement({\n      searchLabel: this.options.searchLabel,\n      classNames: {\n        container: this.classNames.container,\n        form: this.classNames.form,\n        input: this.classNames.input,\n      },\n      handleSubmit: (result) => this.onSubmit(result),\n    });\n\n    this.button = createElement<HTMLAnchorElement>(\n      'a',\n      this.classNames.button,\n      this.searchElement.container,\n      {\n        title: this.options.searchLabel,\n        href: '#',\n        onClick: (e) => this.onClick(e),\n      },\n    );\n\n    L.DomEvent.disableClickPropagation(this.button);\n\n    this.resetButton = createElement<HTMLAnchorElement>(\n      'button',\n      this.classNames.resetButton,\n      this.searchElement.form,\n      {\n        text: '×',\n        'aria-label': this.options.clearSearchLabel,\n        onClick: () => {\n          if (this.searchElement.input.value === '') {\n            this.close();\n          } else {\n            this.clearResults(null, true);\n          }\n        },\n      },\n    );\n\n    L.DomEvent.disableClickPropagation(this.resetButton);\n\n    if (this.options.autoComplete) {\n      this.resultList = new ResultList({\n        handleClick: ({ result }): void => {\n          this.searchElement.input.value = result.label;\n          this.onSubmit({ query: result.label, data: result });\n        },\n        classNames: {\n          resultlist: this.classNames.resultlist,\n          item: this.classNames.item,\n          notfound: this.classNames.notfound,\n        },\n        notFoundMessage: this.options.notFoundMessage,\n      });\n\n      this.searchElement.form.appendChild(this.resultList.container);\n\n      this.searchElement.input.addEventListener(\n        'keyup',\n        debounce(\n          (e: KeyboardEvent) => this.autoSearch(e),\n          this.options.autoCompleteDelay,\n        ),\n        true,\n      );\n\n      this.searchElement.input.addEventListener(\n        'keydown',\n        (e: KeyboardEvent) => this.selectResult(e),\n        true,\n      );\n\n      this.searchElement.input.addEventListener(\n        'keydown',\n        (e: KeyboardEvent) => this.clearResults(e, true),\n        true,\n      );\n    }\n\n    this.searchElement.form.addEventListener(\n      'click',\n      (e) => {\n        e.preventDefault();\n      },\n      false,\n    );\n  },\n\n  onAdd(map: Map) {\n    const { showMarker, style } = this.options;\n\n    this.map = map;\n    if (showMarker) {\n      this.markers.addTo(map);\n    }\n\n    if (style === 'bar') {\n      const root = map\n        .getContainer()\n        .querySelector('.leaflet-control-container');\n\n      this.container = createElement<HTMLDivElement>(\n        'div',\n        'leaflet-control-geosearch leaflet-geosearch-bar',\n      );\n\n      this.container.appendChild(this.searchElement.form);\n      root!.appendChild(this.container);\n    }\n\n    L.DomEvent.disableClickPropagation(this.searchElement.form);\n    return this.searchElement.container;\n  },\n\n  onRemove() {\n    this.container?.remove();\n    return this;\n  },\n\n  open() {\n    const { container, input } = this.searchElement;\n    addClassName(container, 'active');\n    input.focus();\n  },\n\n  close() {\n    const { container } = this.searchElement;\n    removeClassName(container, 'active');\n    this.clearResults();\n  },\n\n  onClick(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { container } = this.searchElement;\n\n    if (container.classList.contains('active')) {\n      this.close();\n    } else {\n      this.open();\n    }\n  },\n\n  selectResult(event) {\n    if (\n      [ENTER_KEY, ARROW_DOWN_KEY, ARROW_UP_KEY].indexOf(event.keyCode) === -1\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (event.keyCode === ENTER_KEY) {\n      const item = this.resultList.select(this.resultList.selected);\n      this.onSubmit({ query: this.searchElement.input.value, data: item });\n      return;\n    }\n\n    const max = this.resultList.count() - 1;\n    if (max < 0) {\n      return;\n    }\n\n    const { selected } = this.resultList;\n    const next = event.keyCode === ARROW_DOWN_KEY ? selected + 1 : selected - 1;\n    const idx = next < 0 ? max : next > max ? 0 : next;\n\n    const item = this.resultList.select(idx);\n    this.searchElement.input.value = item.label;\n  },\n\n  clearResults(event: KeyboardEvent | null, force = false) {\n    if (event && event.keyCode !== ESCAPE_KEY) {\n      return;\n    }\n\n    const { keepResult, autoComplete } = this.options;\n\n    if (force || !keepResult) {\n      this.searchElement.input.value = '';\n      this.markers.clearLayers();\n    }\n\n    if (autoComplete) {\n      this.resultList.clear();\n    }\n  },\n\n  async autoSearch(event) {\n    if (SPECIAL_KEYS.indexOf(event.keyCode) > -1) {\n      return;\n    }\n\n    const query = (event.target as HTMLInputElement).value;\n    const { provider } = this.options;\n\n    if (query.length) {\n      let results = await provider!.search({ query });\n      results = results.slice(0, this.options.maxSuggestions);\n      this.resultList.render(results, this.options.resultFormat);\n    } else {\n      this.resultList.clear();\n    }\n  },\n\n  async onSubmit(query) {\n    this.resultList.clear();\n    const { provider } = this.options;\n\n    const results = await provider!.search(query);\n\n    if (results && results.length > 0) {\n      this.showResult(results[0], query);\n    }\n  },\n\n  showResult(result, query) {\n    const { autoClose, updateMap } = this.options;\n\n    const markers = this.markers.getLayers();\n    if (markers.length >= this.options.maxMarkers) {\n      this.markers.removeLayer(markers[0]);\n    }\n\n    const marker = this.addMarker(result, query);\n\n    if (updateMap) {\n      this.centerMap(result);\n    }\n\n    this.map.fireEvent('geosearch/showlocation', {\n      location: result,\n      marker,\n    });\n\n    if (autoClose) {\n      this.closeResults();\n    }\n  },\n\n  closeResults() {\n    const { container } = this.searchElement;\n\n    if (container.classList.contains('active')) {\n      removeClassName(container, 'active');\n    }\n\n    this.clearResults();\n  },\n\n  addMarker(result, query) {\n    const { marker: options, showPopup, popupFormat } = this.options;\n    const marker = new L.Marker([result.y, result.x], options);\n    let popupLabel = result.label;\n\n    if (typeof popupFormat === 'function') {\n      popupLabel = popupFormat({ query, result });\n    }\n\n    marker.bindPopup(popupLabel);\n\n    this.markers.addLayer(marker);\n\n    if (showPopup) {\n      marker.openPopup();\n    }\n\n    if (options.draggable) {\n      marker.on('dragend', (args) => {\n        this.map.fireEvent('geosearch/marker/dragend', {\n          location: marker.getLatLng(),\n          event: args,\n        });\n      });\n    }\n\n    return marker;\n  },\n\n  centerMap(result) {\n    const { retainZoomLevel, animateZoom } = this.options;\n\n    const resultBounds = result.bounds\n      ? new L.LatLngBounds(result.bounds)\n      : new L.LatLng(result.y, result.x).toBounds(10);\n\n    const bounds = resultBounds.isValid()\n      ? resultBounds\n      : this.markers.getBounds();\n\n    if (!retainZoomLevel && resultBounds.isValid() && !result.bounds) {\n      this.map.setView(bounds.getCenter(), this.getZoom(), {\n        animate: animateZoom,\n      });\n    } else if (!retainZoomLevel && resultBounds.isValid()) {\n      this.map.fitBounds(bounds, { animate: animateZoom });\n    } else {\n      this.map.setView(bounds.getCenter(), this.getZoom(), {\n        animate: animateZoom,\n      });\n    }\n  },\n\n  getZoom(): number {\n    const { retainZoomLevel, zoomLevel } = this.options;\n    return retainZoomLevel ? this.map.getZoom() : zoomLevel;\n  },\n};\n\nexport default function SearchControl(...options: any[]) {\n  if (!L) {\n    throw new Error(UNINITIALIZED_ERR);\n  }\n\n  const LControl = L.Control.extend(Control);\n  return new LControl(...options);\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport default function debounce(\n  cb: (...args: any[]) => void,\n  wait = 250,\n  immediate = false,\n): (...args: any[]) => void {\n  let timeout: ReturnType<typeof setTimeout> | null;\n\n  return (...args: any[]): void => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(() => {\n      timeout = null;\n\n      if (!immediate) {\n        cb(...args);\n      }\n    }, wait);\n\n    if (immediate && !timeout) {\n      cb(...args);\n    }\n  };\n}\n", "export type PointTuple = [number, number];\nexport type BoundsTuple = [PointTuple, PointTuple];\n\nexport interface LatLng {\n  lat: number;\n  lng: number;\n}\n\nexport interface SearchResult<TRawResult = any> {\n  x: number;\n  y: number;\n  label: string;\n  bounds: BoundsTuple | null;\n  raw: TRawResult;\n}\n\nexport interface ProviderParams {\n  [key: string]: string | number | boolean;\n}\n\nexport interface ProviderOptions {\n  params?: ProviderParams;\n}\n\nexport enum RequestType {\n  SEARCH,\n  REVERSE,\n}\n\nexport interface EndpointArgument {\n  query: string | { [key: string]: string | number | boolean };\n  type?: RequestType;\n}\n\nexport interface SearchArgument {\n  query: string;\n}\n\nexport interface ParseArgument<TData> {\n  data: TData;\n}\n\nexport interface Provider<TRequestResult, TRawResult> {\n  options: ProviderOptions;\n\n  endpoint(options: EndpointArgument): string;\n  getParamString(params: ProviderParams): string;\n  parse(response: ParseArgument<TRequestResult>): SearchResult<TRawResult>[];\n  search(options: SearchArgument): Promise<SearchResult<TRawResult>[]>;\n}\n\nexport default abstract class AbstractProvider<\n  TRequestResult = any,\n  TRawResult = any,\n> implements Provider<TRequestResult, TRawResult>\n{\n  options: ProviderOptions;\n\n  constructor(options: ProviderOptions = {}) {\n    this.options = options;\n  }\n\n  abstract endpoint(options: EndpointArgument): string;\n  abstract parse(\n    response: ParseArgument<TRequestResult>,\n  ): SearchResult<TRawResult>[];\n\n  getParamString(params: ProviderParams = {}): string {\n    const set = { ...this.options.params, ...params };\n    return Object.keys(set)\n      .map(\n        (key) => `${encodeURIComponent(key)}=${encodeURIComponent(set[key])}`,\n      )\n      .join('&');\n  }\n\n  getUrl(url: string, params?: ProviderParams): string {\n    return `${url}?${this.getParamString(params)}`;\n  }\n\n  async search(options: SearchArgument): Promise<SearchResult<TRawResult>[]> {\n    const url = this.endpoint({\n      query: options.query,\n      type: RequestType.SEARCH,\n    });\n\n    const request = await fetch(url);\n    const json: TRequestResult = await request.json();\n    return this.parse({ data: json });\n  }\n}\n", "import AbstractProvider, {\n  LatLng,\n  ParseArgument,\n  SearchArgument,\n  SearchResult,\n} from './provider';\n\ninterface RequestResult {\n  hits: RawResult[];\n}\n\ninterface ValueMatch {\n  value: string;\n  matchLevel: string;\n  matchedWords: string[];\n  fullyHighlighted?: boolean;\n}\n\ninterface RawResult {\n  country: { [key: string]: string };\n  country_code: string;\n  city: { [key: string]: string[] };\n  importance: number;\n  _tags: string[];\n  postcode: string[];\n  population: number;\n  is_country: boolean;\n  is_highway: boolean;\n  is_city: boolean;\n  is_popular: boolean;\n  administrative: string[];\n  admin_level: number;\n  is_suburb: boolean;\n  locale_names: {\n    default: string[];\n  };\n  _geoloc: LatLng;\n  objectID: string;\n  _highlightResult: {\n    country: {\n      default: ValueMatch;\n      [key: string]: ValueMatch;\n    };\n    city: {\n      default: ValueMatch[];\n      [key: string]: ValueMatch[];\n    };\n    postcode: ValueMatch[];\n    administrative: ValueMatch[];\n    locale_names: {\n      default: ValueMatch[];\n    };\n  };\n}\n\ninterface ProviderOptions {\n  key?: string;\n  [key: string]: string | boolean | number | undefined;\n}\n\nexport default class Provider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  endpoint(): string {\n    // No query, Algolia requires POST request\n    return 'https://places-dsn.algolia.net/1/places/query';\n  }\n\n  /**\n   * Find index of value with best match\n   * (full, fallback to partial, and then to 0)\n   */\n  findBestMatchLevelIndex(vms: ValueMatch[]): number {\n    const match =\n      vms.find((vm) => vm.matchLevel === 'full') ||\n      vms.find((vm) => vm.matchLevel === 'partial');\n    return match ? vms.indexOf(match) : 0;\n  }\n\n  /**\n   * Algolia not provides labels for hits, so\n   * we will implement that builder ourselves\n   */\n  getLabel(result: RawResult): string {\n    return [\n      // Building + Street\n      result.locale_names?.default[\n        this.findBestMatchLevelIndex(\n          result._highlightResult.locale_names.default,\n        )\n      ],\n      // City\n      result.city?.default[\n        this.findBestMatchLevelIndex(result._highlightResult.city.default)\n      ],\n      // Administrative (State / Province)\n      result.administrative[\n        this.findBestMatchLevelIndex(result._highlightResult.administrative)\n      ],\n      // Zip code / Postal code\n      result.postcode?.[\n        this.findBestMatchLevelIndex(result._highlightResult.postcode)\n      ],\n      // Country\n      result.country?.default,\n    ]\n      .filter(Boolean)\n      .join(', ');\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return response.data.hits.map((r) => ({\n      x: r._geoloc.lng,\n      y: r._geoloc.lat,\n      label: this.getLabel(r),\n      bounds: null, // Algolia API does not provide bounds\n      raw: r,\n    }));\n  }\n\n  async search({ query }: SearchArgument): Promise<SearchResult<RawResult>[]> {\n    const params = typeof query === 'string' ? { query } : query;\n\n    const request = await fetch(this.endpoint(), {\n      method: 'POST',\n      body: JSON.stringify({\n        ...this.options.params,\n        ...params,\n      }),\n    });\n\n    const json = await request.json();\n    return this.parse({ data: json });\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  SearchArgument,\n  SearchResult,\n} from './provider';\nimport { createScriptElement } from '../domUtils';\n\nexport interface RequestResult {\n  authenticationResultCode: string;\n  brandLogoUri: string;\n  copyright: string;\n  resourceSets: {\n    estimatedTotal: number;\n    resources: RawResult[];\n  }[];\n  statusCode: number;\n  statusDescription: string;\n  traceId: string;\n}\n\nexport interface RawResult {\n  __type: string;\n  bbox: [number, number, number, number];\n  name: string;\n  point: { type: 'Point'; coordinates: [number, number] };\n  address: {\n    adminDistrict: string;\n    adminDistrict2: string;\n    countryRegion: string;\n    formattedAddress: string;\n    locality: string;\n  };\n  confidence: string;\n  entityType: string;\n  geocodePoints: [\n    {\n      type: 'Point';\n      coordinates: [number, number];\n      calculationMethod: string;\n      usageTypes: string[];\n    },\n  ];\n  matchCodes: string[];\n}\n\nexport default class BingProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl = 'https://dev.virtualearth.net/REST/v1/Locations';\n\n  endpoint({ query, jsonp }: EndpointArgument & { jsonp: string }): string {\n    const params = typeof query === 'string' ? { q: query } : query;\n    params.jsonp = jsonp;\n\n    return this.getUrl(this.searchUrl, params);\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    if (response.data.resourceSets.length === 0) {\n      return [];\n    }\n\n    return response.data.resourceSets[0].resources.map((r) => ({\n      x: r.point.coordinates[1],\n      y: r.point.coordinates[0],\n      label: r.address.formattedAddress,\n      bounds: [\n        [r.bbox[0], r.bbox[1]], // s, w\n        [r.bbox[2], r.bbox[3]], // n, e\n      ],\n      raw: r,\n    }));\n  }\n\n  async search({ query }: SearchArgument): Promise<SearchResult<RawResult>[]> {\n    const jsonp = `BING_JSONP_CB_${Date.now()}`;\n    const json = await createScriptElement<RequestResult>(\n      this.endpoint({ query, jsonp }),\n      jsonp,\n    );\n\n    return this.parse({ data: json });\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  SearchResult,\n} from './provider';\n\ninterface RequestResult {\n  spatialReference: { wkid: number; latestWkid: number };\n  locations: RawResult[];\n}\n\ninterface RawResult {\n  name: string;\n  extent: {\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n  };\n  feature: {\n    geometry: { x: number; y: number };\n    attributes: { Score: number; Addr_Type: string };\n  };\n}\n\nexport default class EsriProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl =\n    'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/find';\n\n  endpoint({ query }: EndpointArgument): string {\n    const params = typeof query === 'string' ? { text: query } : query;\n    params.f = 'json';\n\n    return this.getUrl(this.searchUrl, params);\n  }\n\n  parse(result: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return result.data.locations.map((r) => ({\n      x: r.feature.geometry.x,\n      y: r.feature.geometry.y,\n      label: r.name,\n      bounds: [\n        [r.extent.ymin, r.extent.xmin], // s, w\n        [r.extent.ymax, r.extent.xmax], // n, e\n      ],\n      raw: r,\n    }));\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  RequestType,\n  SearchResult,\n} from './provider';\n\nexport interface RequestResult {\n  geocoding: object;\n  features: RawResult[];\n}\n\nexport type PeliasProviderOptions = {\n  host?: string;\n} & ProviderOptions;\n\nexport interface RawResult {\n  type: 'Feature';\n  geometry: {\n    type: 'Point';\n    coordinates: [number, number];\n  };\n  bbox?: [number, number, number, number];\n  properties: {\n    id: string;\n    source_id: string;\n    gid: string;\n\n    layer: string;\n    source: string;\n\n    label: string;\n    name: string;\n\n    accuracy: 'centroid' | 'point';\n    confidence?: number;\n    match_type?: 'exact' | 'interpolated' | 'fallback';\n\n    borough?: string;\n    borough_a?: string;\n    borough_gid?: string;\n    continent?: string;\n    continent_a?: string;\n    continent_gid?: string;\n    country?: string;\n    country_a?: string;\n    country_gid?: string;\n    county?: string;\n    county_a?: string;\n    county_gid?: string;\n    dependency?: string;\n    dependency_a?: string;\n    dependency_gid?: string;\n    empire?: string;\n    empire_a?: string;\n    empire_gid?: string;\n    localadmin?: string;\n    localadmin_a?: string;\n    localadmin_gid?: string;\n    locality?: string;\n    locality_a?: string;\n    locality_gid?: string;\n    macrocounty?: string;\n    macrocounty_a?: string;\n    macrocounty_gid?: string;\n    macroregion?: string;\n    macroregion_a?: string;\n    macroregion_gid?: string;\n    marinearea?: string;\n    marinearea_a?: string;\n    marinearea_gid?: string;\n    neighbourhood?: string;\n    neighbourhood_a?: string;\n    neighbourhood_gid?: string;\n    ocean?: string;\n    ocean_a?: string;\n    ocean_gid?: string;\n    postalcode?: string;\n    postalcode_a?: string;\n    postalcode_gid?: string;\n    region?: string;\n    region_a?: string;\n    region_gid?: string;\n\n    street?: string;\n    housenumber?: string;\n\n    addendum?: any;\n  };\n}\n\nexport default class PeliasProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  // Pelias servers are self-hosted so you'll need to configure the 'options.host' string\n  // to identify where requests to your running pelias/api server instance should be sent.\n  // note: you SHOULD include the scheme, domain and port but NOT any path or parameters.\n  // If you're using the Docker setup (https://github.com/pelias/docker)\n  // then the default host of 'http://localhost:4000' will work out of the box.\n  host: string;\n\n  constructor(options: PeliasProviderOptions = {}) {\n    super(options);\n    this.host = options.host || 'http://localhost:4000';\n  }\n\n  /**\n   * note: Pelias has four different query modes:\n   * /v1/autocomplete: for partially completed inputs (such as when a user types)\n   * /v1/search: for completed inputs (such as when geocoding a CSV file)\n   * /v1/search/structured: for completed inputs with fields already separated\n   * /v1/reverse: for finding places nearby/enveloping a point\n   */\n  endpoint({ query, type }: EndpointArgument) {\n    switch (type) {\n      // case RequestType.AUTOCOMPLETE:\n      //   const autocompleteParams = (typeof query === 'string') ? { text: query } : query;\n      //   return this.getUrl(`${this.host}/v1/autocomplete`, autocompleteParams);\n\n      // case RequestType.FULLTEXT:\n      //   const searchParams = (typeof query === 'string') ? { text: query } : query;\n      //   return this.getUrl(`${this.host}/v1/search`, searchParams);\n\n      // case RequestType.STRUCTURED:\n      //   const structuredParams = (typeof query === 'string') ? { address: query } : query;\n      //   return this.getUrl(`${this.host}/v1/search/structured`, structuredParams);\n\n      case RequestType.REVERSE:\n        const reverseParams = typeof query === 'string' ? {} : query;\n        return this.getUrl(`${this.host}/v1/reverse`, reverseParams);\n\n      // note: the default query mode is set to 'autocomplete'\n      default:\n        const autocompleteParams =\n          typeof query === 'string' ? { text: query } : query;\n        return this.getUrl(`${this.host}/v1/autocomplete`, autocompleteParams);\n    }\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return response.data.features.map((feature) => {\n      const res: SearchResult<RawResult> = {\n        x: feature.geometry.coordinates[0],\n        y: feature.geometry.coordinates[1],\n        label: feature.properties.label,\n        bounds: null,\n        raw: feature,\n      };\n\n      // bbox values are only available for features derived from non-point geometries\n      // geojson bbox format: [minX, minY, maxX, maxY]\n      if (Array.isArray(feature.bbox) && feature.bbox.length === 4) {\n        res.bounds = [\n          [feature.bbox[1], feature.bbox[0]], // s, w\n          [feature.bbox[3], feature.bbox[2]], // n, e\n        ];\n      }\n\n      return res;\n    });\n  }\n}\n", "import PeliasProvider, { PeliasProviderOptions } from './peliasProvider';\n\nexport default class GeocodeEarthProvider extends PeliasProvider {\n  constructor(options: PeliasProviderOptions = {}) {\n    options.host = 'https://api.geocode.earth';\n    super(options);\n  }\n}\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\nvar isEqual = /*@__PURE__*/getDefaultExportFromCjs(fastDeepEqual);\n\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_ID = \"__googleMapsScriptId\";\n/**\n * The status of the [[Loader]].\n */\nvar LoaderStatus;\n(function (LoaderStatus) {\n    LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\n    LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\n    LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\n    LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\n})(LoaderStatus || (LoaderStatus = {}));\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nclass Loader {\n    /**\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n     * using this library, instead the defaults are set by the Google Maps\n     * JavaScript API server.\n     *\n     * ```\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n     * ```\n     */\n    constructor({ apiKey, authReferrerPolicy, channel, client, id = DEFAULT_ID, language, libraries = [], mapIds, nonce, region, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", version, }) {\n        this.callbacks = [];\n        this.done = false;\n        this.loading = false;\n        this.errors = [];\n        this.apiKey = apiKey;\n        this.authReferrerPolicy = authReferrerPolicy;\n        this.channel = channel;\n        this.client = client;\n        this.id = id || DEFAULT_ID; // Do not allow empty string\n        this.language = language;\n        this.libraries = libraries;\n        this.mapIds = mapIds;\n        this.nonce = nonce;\n        this.region = region;\n        this.retries = retries;\n        this.url = url;\n        this.version = version;\n        if (Loader.instance) {\n            if (!isEqual(this.options, Loader.instance.options)) {\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\n            }\n            return Loader.instance;\n        }\n        Loader.instance = this;\n    }\n    get options() {\n        return {\n            version: this.version,\n            apiKey: this.apiKey,\n            channel: this.channel,\n            client: this.client,\n            id: this.id,\n            libraries: this.libraries,\n            language: this.language,\n            region: this.region,\n            mapIds: this.mapIds,\n            nonce: this.nonce,\n            url: this.url,\n            authReferrerPolicy: this.authReferrerPolicy,\n        };\n    }\n    get status() {\n        if (this.errors.length) {\n            return LoaderStatus.FAILURE;\n        }\n        if (this.done) {\n            return LoaderStatus.SUCCESS;\n        }\n        if (this.loading) {\n            return LoaderStatus.LOADING;\n        }\n        return LoaderStatus.INITIALIZED;\n    }\n    get failed() {\n        return this.done && !this.loading && this.errors.length >= this.retries + 1;\n    }\n    /**\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n     *\n     * @ignore\n     * @deprecated\n     */\n    createUrl() {\n        let url = this.url;\n        url += `?callback=__googleMapsCallback&loading=async`;\n        if (this.apiKey) {\n            url += `&key=${this.apiKey}`;\n        }\n        if (this.channel) {\n            url += `&channel=${this.channel}`;\n        }\n        if (this.client) {\n            url += `&client=${this.client}`;\n        }\n        if (this.libraries.length > 0) {\n            url += `&libraries=${this.libraries.join(\",\")}`;\n        }\n        if (this.language) {\n            url += `&language=${this.language}`;\n        }\n        if (this.region) {\n            url += `&region=${this.region}`;\n        }\n        if (this.version) {\n            url += `&v=${this.version}`;\n        }\n        if (this.mapIds) {\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\n        }\n        if (this.authReferrerPolicy) {\n            url += `&auth_referrer_policy=${this.authReferrerPolicy}`;\n        }\n        return url;\n    }\n    deleteScript() {\n        const script = document.getElementById(this.id);\n        if (script) {\n            script.remove();\n        }\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     * @deprecated, use importLibrary() instead.\n     */\n    load() {\n        return this.loadPromise();\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     *\n     * @ignore\n     * @deprecated, use importLibrary() instead.\n     */\n    loadPromise() {\n        return new Promise((resolve, reject) => {\n            this.loadCallback((err) => {\n                if (!err) {\n                    resolve(window.google);\n                }\n                else {\n                    reject(err.error);\n                }\n            });\n        });\n    }\n    importLibrary(name) {\n        this.execute();\n        return google.maps.importLibrary(name);\n    }\n    /**\n     * Load the Google Maps JavaScript API script with a callback.\n     * @deprecated, use importLibrary() instead.\n     */\n    loadCallback(fn) {\n        this.callbacks.push(fn);\n        this.execute();\n    }\n    /**\n     * Set the script on document.\n     */\n    setScript() {\n        var _a, _b;\n        if (document.getElementById(this.id)) {\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\n            this.callback();\n            return;\n        }\n        const params = {\n            key: this.apiKey,\n            channel: this.channel,\n            client: this.client,\n            libraries: this.libraries.length && this.libraries,\n            v: this.version,\n            mapIds: this.mapIds,\n            language: this.language,\n            region: this.region,\n            authReferrerPolicy: this.authReferrerPolicy,\n        };\n        // keep the URL minimal:\n        Object.keys(params).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (key) => !params[key] && delete params[key]);\n        if (!((_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.maps) === null || _b === void 0 ? void 0 : _b.importLibrary)) {\n            // tweaked copy of https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n            // which also sets the base url, the id, and the nonce\n            /* eslint-disable */\n            ((g) => {\n                // @ts-ignore\n                let h, a, k, p = \"The Google Maps JavaScript API\", c = \"google\", l = \"importLibrary\", q = \"__ib__\", m = document, b = window;\n                // @ts-ignore\n                b = b[c] || (b[c] = {});\n                // @ts-ignore\n                const d = b.maps || (b.maps = {}), r = new Set(), e = new URLSearchParams(), u = () => \n                // @ts-ignore\n                h || (h = new Promise((f, n) => __awaiter(this, void 0, void 0, function* () {\n                    var _a;\n                    yield (a = m.createElement(\"script\"));\n                    a.id = this.id;\n                    e.set(\"libraries\", [...r] + \"\");\n                    // @ts-ignore\n                    for (k in g)\n                        e.set(k.replace(/[A-Z]/g, (t) => \"_\" + t[0].toLowerCase()), g[k]);\n                    e.set(\"callback\", c + \".maps.\" + q);\n                    a.src = this.url + `?` + e;\n                    d[q] = f;\n                    a.onerror = () => (h = n(Error(p + \" could not load.\")));\n                    // @ts-ignore\n                    a.nonce = this.nonce || ((_a = m.querySelector(\"script[nonce]\")) === null || _a === void 0 ? void 0 : _a.nonce) || \"\";\n                    m.head.append(a);\n                })));\n                // @ts-ignore\n                d[l] ? console.warn(p + \" only loads once. Ignoring:\", g) : (d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)));\n            })(params);\n            /* eslint-enable */\n        }\n        // While most libraries populate the global namespace when loaded via bootstrap params,\n        // this is not the case for \"marker\" when used with the inline bootstrap loader\n        // (and maybe others in the future). So ensure there is an importLibrary for each:\n        const libraryPromises = this.libraries.map((library) => this.importLibrary(library));\n        // ensure at least one library, to kick off loading...\n        if (!libraryPromises.length) {\n            libraryPromises.push(this.importLibrary(\"core\"));\n        }\n        Promise.all(libraryPromises).then(() => this.callback(), (error) => {\n            const event = new ErrorEvent(\"error\", { error }); // for backwards compat\n            this.loadErrorCallback(event);\n        });\n    }\n    /**\n     * Reset the loader state.\n     */\n    reset() {\n        this.deleteScript();\n        this.done = false;\n        this.loading = false;\n        this.errors = [];\n        this.onerrorEvent = null;\n    }\n    resetIfRetryingFailed() {\n        if (this.failed) {\n            this.reset();\n        }\n    }\n    loadErrorCallback(e) {\n        this.errors.push(e);\n        if (this.errors.length <= this.retries) {\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\n            console.error(`Failed to load Google Maps script, retrying in ${delay} ms.`);\n            setTimeout(() => {\n                this.deleteScript();\n                this.setScript();\n            }, delay);\n        }\n        else {\n            this.onerrorEvent = e;\n            this.callback();\n        }\n    }\n    callback() {\n        this.done = true;\n        this.loading = false;\n        this.callbacks.forEach((cb) => {\n            cb(this.onerrorEvent);\n        });\n        this.callbacks = [];\n    }\n    execute() {\n        this.resetIfRetryingFailed();\n        if (this.done) {\n            this.callback();\n        }\n        else {\n            // short circuit and warn if google.maps is already loaded\n            if (window.google && window.google.maps && window.google.maps.version) {\n                console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\n                    \"This may result in undesirable behavior as options and script parameters may not match.\");\n                this.callback();\n                return;\n            }\n            if (this.loading) ;\n            else {\n                this.loading = true;\n                this.setScript();\n            }\n        }\n    }\n}\n\nexport { DEFAULT_ID, Loader, LoaderStatus };\n//# sourceMappingURL=index.mjs.map\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  SearchArgument,\n  SearchResult,\n} from './provider';\nimport { Loader, LoaderOptions } from '@googlemaps/js-api-loader';\n\ninterface RequestResult {\n  results: google.maps.GeocoderResult[];\n  status?: google.maps.GeocoderStatus;\n}\n\ninterface GeocodeError {\n  code: Exclude<google.maps.GeocoderStatus, google.maps.GeocoderStatus.OK>;\n  endpoint: 'GEOCODER_GEOCODE';\n  message: string;\n  name: 'MapsRequestError';\n  stack: string;\n}\n\nexport type GoogleProviderOptions = LoaderOptions & ProviderOptions;\n\nexport default class GoogleProvider extends AbstractProvider<\n  RequestResult,\n  google.maps.GeocoderResult\n> {\n  loader: Promise<google.maps.Geocoder> | null = null;\n  geocoder: google.maps.Geocoder | null = null;\n\n  constructor(options: GoogleProviderOptions) {\n    super(options);\n\n    if (typeof window !== 'undefined') {\n      this.loader = new Loader(options).load().then((google) => {\n        const geocoder = new google.maps.Geocoder();\n        this.geocoder = geocoder;\n        return geocoder;\n      });\n    }\n  }\n\n  endpoint({ query }: EndpointArgument): never {\n    throw new Error('Method not implemented.');\n  }\n\n  parse(\n    response: ParseArgument<RequestResult>,\n  ): SearchResult<google.maps.GeocoderResult>[] {\n    return response.data.results.map((r) => {\n      const { lat, lng } = r.geometry.location.toJSON();\n      const { east, north, south, west } = r.geometry.viewport.toJSON();\n\n      return {\n        x: lng,\n        y: lat,\n        label: r.formatted_address,\n        bounds: [\n          [south, west],\n          [north, east],\n        ],\n        raw: r,\n      };\n    });\n  }\n\n  async search(\n    options: SearchArgument,\n  ): Promise<SearchResult<google.maps.GeocoderResult>[]> {\n    const geocoder = this.geocoder || (await this.loader);\n\n    if (!geocoder) {\n      throw new Error(\n        'GoogleMaps GeoCoder is not loaded. Are you trying to run this server side?',\n      );\n    }\n\n    const response = await geocoder\n      .geocode({ address: options.query }, (response) => ({\n        results: response,\n      }))\n      .catch((e: GeocodeError) => {\n        if (e.code !== 'ZERO_RESULTS') {\n          console.error(`${e.code}: ${e.message}`);\n        }\n        return { results: [] };\n      });\n\n    return this.parse({ data: response });\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  LatLng,\n  ParseArgument,\n  SearchResult,\n} from './provider';\n\nexport interface RequestResult {\n  results: RawResult[];\n  status: string;\n}\n\nexport interface RawResult {\n  address_components: {\n    long_name: string;\n    short_name: string;\n    types: string[];\n  }[];\n  formatted_address: string;\n  geometry: {\n    location: LatLng;\n    location_type: string;\n    viewport: {\n      northeast: LatLng;\n      southwest: LatLng;\n    };\n  };\n  place_id: string;\n  plus_code: {\n    compound_code: string;\n    global_code: string;\n  };\n  types: string[];\n}\n\nexport default class LegacyGoogleProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n  endpoint({ query }: EndpointArgument) {\n    const params = typeof query === 'string' ? { address: query } : query;\n    return this.getUrl(this.searchUrl, params);\n  }\n\n  parse(result: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return result.data.results.map((r) => ({\n      x: r.geometry.location.lng,\n      y: r.geometry.location.lat,\n      label: r.formatted_address,\n      bounds: [\n        [r.geometry.viewport.southwest.lat, r.geometry.viewport.southwest.lng], // s, w\n        [r.geometry.viewport.northeast.lat, r.geometry.viewport.northeast.lng], // n, e\n      ],\n      raw: r,\n    }));\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  LatLng,\n  ParseArgument,\n  SearchResult,\n} from './provider';\n\nexport interface RequestResult {\n  items: RawResult[];\n}\n\nexport interface RawResult {\n  title: string;\n  id: string;\n  resultType: string;\n  address: {\n    label: string;\n    countryCode: string;\n    countryName: string;\n    state: string;\n    county: string;\n    city: string;\n    district: string;\n    street: string;\n    postalCode: string;\n    houseNumber: string;\n  };\n  position: LatLng;\n  access: LatLng[];\n  categories: { id: string }[];\n  contacts: { [key: string]: { value: string }[] }[];\n  scoring: {\n    queryScore: number;\n    fieldScore: {\n      placeName: number;\n    };\n  };\n}\n\nexport default class HereProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl = 'https://geocode.search.hereapi.com/v1/autosuggest';\n\n  endpoint({ query }: EndpointArgument): string {\n    const params = typeof query === 'string' ? { q: query } : query;\n    return this.getUrl(this.searchUrl, params);\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return response.data.items\n      .filter((r) => r.position !== undefined)\n      .map((r) => ({\n        x: r.position.lng,\n        y: r.position.lat,\n        label: r.address.label,\n        bounds: null,\n        raw: r,\n      }));\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  RequestType,\n  SearchResult,\n} from './provider';\nimport hasShape from '../lib/hasShape';\n\nexport type RequestResult = RawResult[];\n\nexport interface RawResult {\n  place_id: string;\n  licence: string;\n  osm_type: string;\n  osm_id: number;\n  boundingbox: [string, string, string, string];\n  lat: string;\n  lon: string;\n  display_name: string;\n  class: string;\n  type: string;\n  importance: number;\n  icon?: string;\n}\n\nexport type OpenStreetMapProviderOptions = {\n  searchUrl?: string;\n  reverseUrl?: string;\n} & ProviderOptions;\n\nexport default class OpenStreetMapProvider extends AbstractProvider<\n  RawResult[],\n  RawResult\n> {\n  searchUrl: string;\n  reverseUrl: string;\n\n  constructor(options: OpenStreetMapProviderOptions = {}) {\n    super(options);\n\n    const host = 'https://nominatim.openstreetmap.org';\n    this.searchUrl = options.searchUrl || `${host}/search`;\n    this.reverseUrl = options.reverseUrl || `${host}/reverse`;\n  }\n\n  endpoint({ query, type }: EndpointArgument): string {\n    const params = typeof query === 'string' ? { q: query } : query;\n    params.format = 'json';\n\n    switch (type) {\n      case RequestType.REVERSE:\n        return this.getUrl(this.reverseUrl, params);\n\n      default:\n        return this.getUrl(this.searchUrl, params);\n    }\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    const records = Array.isArray(response.data)\n      ? response.data\n      : [response.data];\n\n    return records.map((r) => ({\n      x: Number(r.lon),\n      y: Number(r.lat),\n      label: r.display_name,\n      bounds: [\n        [parseFloat(r.boundingbox[0]), parseFloat(r.boundingbox[2])], // s, w\n        [parseFloat(r.boundingbox[1]), parseFloat(r.boundingbox[3])], // n, e\n      ],\n      raw: r,\n    }));\n  }\n}\n", "import OpenStreetMapProvider, {\n  OpenStreetMapProviderOptions,\n  RawResult,\n  RequestResult,\n} from './openStreetMapProvider';\n\ninterface RequestResultWithError extends RequestResult {\n  error?: string;\n}\nimport { ParseArgument, SearchResult } from './provider';\n\nexport default class LocationIQProvider extends OpenStreetMapProvider {\n  constructor(options: OpenStreetMapProviderOptions) {\n    super({\n      ...options,\n      searchUrl: `https://locationiq.org/v1/search.php`,\n      reverseUrl: `https://locationiq.org/v1/reverse.php`,\n    });\n  }\n\n  parse(\n    response: ParseArgument<RequestResultWithError>,\n  ): SearchResult<RawResult>[] {\n    if (response.data.error) {\n      return [];\n    }\n    return super.parse(response);\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  LatLng,\n  ParseArgument,\n  SearchArgument,\n  SearchResult,\n} from './provider';\n\nexport interface RequestResult {\n  results: RawResult[];\n}\n\nexport interface RawResult {\n  annotations: {\n    DMS: { lat: string; lng: string };\n    MGRS: string;\n    Maidenhead: string;\n    Mercator: { x: number; y: number };\n    OSM: {\n      edit_url: string;\n      note_url: string;\n      url: string;\n    };\n    UN_M49: {\n      regions: { [key: string]: string };\n      statistical_groupings: string[];\n    };\n    callingcode: number;\n    currency: {\n      alternate_symbols: string[];\n      decimal_mark: string;\n      html_entity: string;\n      iso_code: string;\n      iso_numeric: string;\n      name: string;\n      smallest_denomination: number;\n      subunit: string;\n      subunit_to_unit: number;\n      symbol: string;\n      symbol_first: number;\n      thousands_separator: string;\n    };\n    flag: string;\n    geohash: string;\n    qibla: number;\n    roadinfo: {\n      drive_on: string;\n      road: string;\n      road_type: string;\n      speed_in: string;\n    };\n    sun: {\n      rise: {\n        apparent: number;\n        astronomical: number;\n        civil: number;\n        nautical: number;\n      };\n      set: {\n        apparent: number;\n        astronomical: number;\n        civil: number;\n        nautical: number;\n      };\n    };\n    timezone: {\n      name: string;\n      now_in_dst: number;\n      offset_sec: number;\n      offset_string: string;\n      short_name: string;\n    };\n    what3words: { words: string };\n  };\n  bounds: {\n    northeast: LatLng;\n    southwest: LatLng;\n  };\n  formatted: string;\n  geometry: LatLng;\n}\n\nexport default class OpenCageProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl = 'https://api.opencagedata.com/geocode/v1/json';\n\n  endpoint({ query }: EndpointArgument) {\n    const params = typeof query === 'string' ? { q: query } : query;\n    params.format = 'json';\n\n    return this.getUrl(this.searchUrl, params);\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return response.data.results.map((r) => ({\n      x: r.geometry.lng,\n      y: r.geometry.lat,\n      label: r.formatted,\n      bounds: [\n        [r.bounds.southwest.lat, r.bounds.southwest.lng], // s, w\n        [r.bounds.northeast.lat, r.bounds.northeast.lng], // n, e\n      ],\n      raw: r,\n    }));\n  }\n\n  async search(options: SearchArgument): Promise<SearchResult<RawResult>[]> {\n    // opencage returns a 400 error when query length < 2\n    if (options.query.length < 2) {\n      return [];\n    }\n\n    return super.search(options);\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  RequestType,\n  SearchResult,\n} from './provider';\nimport hasShape from '../lib/hasShape';\n\nexport type RequestResult = RawResult[];\n\nexport interface RawResult {\n  place_id: string;\n  licence: string;\n  osm_type: string;\n  osm_id: number;\n  boundingbox: [string, string, string, string];\n  lat: string;\n  lon: string;\n  display_name: string;\n  class: string;\n  type: string;\n  importance: number;\n  icon?: string;\n}\n\nexport type OpenStreetMapProviderOptions = {\n  searchUrl?: string;\n  reverseUrl?: string;\n} & ProviderOptions;\n\nexport default class CivilDefenseMapProvider extends AbstractProvider<\n  RawResult[],\n  RawResult\n> {\n  searchUrl: string;\n  reverseUrl: string;\n\n  constructor(options: OpenStreetMapProviderOptions = {}) {\n    super(options);\n\n    const host = 'https://civildefense.fit.vutbr.cz';\n    this.searchUrl = options.searchUrl || `${host}/search`;\n    this.reverseUrl = options.reverseUrl || `${host}/reverse`;\n  }\n\n  endpoint({ query, type }: EndpointArgument): string {\n    const params = typeof query === 'string' ? { q: query } : query;\n    params.format = 'json';\n\n    switch (type) {\n      case RequestType.REVERSE:\n        return this.getUrl(this.reverseUrl, params);\n\n      default:\n        return this.getUrl(this.searchUrl, params);\n    }\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    const records = Array.isArray(response.data)\n      ? response.data\n      : [response.data];\n\n    return records.map((r) => ({\n      x: Number(r.lon),\n      y: Number(r.lat),\n      label: r.display_name,\n      bounds: [\n        [parseFloat(r.boundingbox[0]), parseFloat(r.boundingbox[2])], // s, w\n        [parseFloat(r.boundingbox[1]), parseFloat(r.boundingbox[3])], // n, e\n      ],\n      raw: r,\n    }));\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  SearchResult,\n  BoundsTuple,\n} from './provider';\n\nexport type RequestResult = {\n  features: RawResult[];\n};\nexport interface RawResult {\n  center: [string, string];\n  text: string;\n  place_name: string;\n  bbox: [string, string, string, string];\n}\n\nexport type MapBoxProviderOptions = {\n  searchUrl?: string;\n  reverseUrl?: string;\n} & ProviderOptions;\n\nexport default class MapBoxProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl: string;\n\n  constructor(options: MapBoxProviderOptions = {}) {\n    super(options);\n\n    const host = 'https://a.tiles.mapbox.com';\n    this.searchUrl = options.searchUrl || `${host}/v4/geocode/mapbox.places/`;\n  }\n\n  endpoint({ query }: EndpointArgument): string {\n    return this.getUrl(`${this.searchUrl}${query}.json`);\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    const records = Array.isArray(response.data.features)\n      ? response.data.features\n      : [];\n\n    return records.map((r) => {\n      let bounds = null;\n      if (r.bbox) {\n        bounds = [\n          [parseFloat(r.bbox[1]), parseFloat(r.bbox[0])], // s, w\n          [parseFloat(r.bbox[3]), parseFloat(r.bbox[2])], // n, e\n        ] as BoundsTuple;\n      }\n\n      return {\n        x: Number(r.center[0]),\n        y: Number(r.center[1]),\n        label: r.place_name ? r.place_name : r.text,\n        bounds,\n        raw: r,\n      };\n    });\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  SearchResult,\n  RequestType,\n} from './provider';\n\nexport interface RequestResult {\n  features: RawResult[];\n  type: string;\n  version: string;\n  attribution: string;\n  licence: string;\n  query: string;\n  limit: string;\n}\n\nexport interface RawResult {\n  properties: {\n    label: string;\n    score: number;\n    importance: number;\n    x: number;\n    y: number;\n    housenumber: string;\n    id: string;\n    type: string;\n    name: string;\n    postcode: string;\n    citycode: string;\n    city: string;\n    context: string;\n    street: string;\n  };\n  type: string;\n  geometry: {\n    coordinates: number[];\n    type: string;\n  };\n}\n\nexport type GeoApiFrProviderOptions = {\n  searchUrl?: string;\n  reverseUrl?: string;\n} & ProviderOptions;\n\nexport default class GeoApiFrProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl: string;\n  reverseUrl: string;\n\n  constructor(options: GeoApiFrProviderOptions = {}) {\n    super(options);\n\n    const host = 'https://api-adresse.data.gouv.fr';\n    this.searchUrl = options.searchUrl || `${host}/search`;\n    this.reverseUrl = options.reverseUrl || `${host}/reverse`;\n  }\n\n  endpoint({ query, type }: EndpointArgument) {\n    const params = typeof query === 'string' ? { q: query } : query;\n\n    switch (type) {\n      case RequestType.REVERSE:\n        return this.getUrl(this.reverseUrl, params);\n\n      default:\n        return this.getUrl(this.searchUrl, params);\n    }\n  }\n\n  parse(result: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    return result.data.features.map((r) => ({\n      x: r.geometry.coordinates[0],\n      y: r.geometry.coordinates[1],\n      label: r.properties.label,\n      bounds: null,\n      raw: r,\n    }));\n  }\n}\n", "import AbstractProvider, {\n  EndpointArgument,\n  ParseArgument,\n  ProviderOptions,\n  RequestType,\n  SearchResult,\n} from './provider';\n\nexport type RequestResult = {\n  results: RawResult[];\n  query: RawQuery[];\n};\n\nexport interface RawResult {\n  country: string;\n  country_code: string;\n  state: string;\n  county: string;\n  city: string;\n  postcode: number;\n  suburb: string;\n  street: string;\n  lon: string;\n  lat: string;\n  state_code: string;\n  formatted: string;\n  bbox: BBox;\n}\n\nexport interface RawQuery {\n  text: string;\n  parsed: RawQueryParsed;\n}\n\nexport type RawQueryParsed = {\n  city: string;\n  expected_type: string;\n};\n\nexport type BBox = {\n  lon1: string;\n  lat1: string;\n  lon2: string;\n  lat2: string;\n};\n\nexport type GeoapifyProviderOptions = {\n  searchUrl?: string;\n  reverseUrl?: string;\n} & ProviderOptions;\n\nexport default class GeoapifyProvider extends AbstractProvider<\n  RequestResult,\n  RawResult\n> {\n  searchUrl: string;\n  reverseUrl: string;\n\n  constructor(options: GeoapifyProviderOptions = {}) {\n    super(options);\n\n    const host = 'https://api.geoapify.com/v1/geocode';\n    this.searchUrl = options.searchUrl || `${host}/search`;\n    this.reverseUrl = options.reverseUrl || `${host}/reverse`;\n  }\n\n  endpoint({ query, type }: EndpointArgument): string {\n    const params = typeof query === 'string' ? { text: query } : query;\n    params.format = 'json';\n\n    switch (type) {\n      case RequestType.REVERSE:\n        return this.getUrl(this.reverseUrl, params);\n\n      default:\n        return this.getUrl(this.searchUrl, params);\n    }\n  }\n\n  parse(response: ParseArgument<RequestResult>): SearchResult<RawResult>[] {\n    const records = Array.isArray(response.data.results)\n      ? response.data.results\n      : [response.data.results];\n    return records.map((r) => ({\n      x: Number(r.lon),\n      y: Number(r.lat),\n      label: r.formatted,\n      bounds: [\n        [parseFloat(r.bbox.lat1), parseFloat(r.bbox.lon1)], // s, w\n        [parseFloat(r.bbox.lat2), parseFloat(r.bbox.lon2)], // n, e\n      ],\n      raw: r,\n    }));\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,SAAA,EACJA,IACAC,IACAC,IACAC,IAAAA;AAAAA,aAFAF,OAAAA,KAA2B,KAAA,WAE3BE,OAAAA,KAAiE,CAAE;AAEnE,MAAAC,KAAWC,SAASC,cAAcN,EAAAA;AA0BlC,SAxBIC,OACFM,GAAGN,YAAYA,KAGjBO,OAAOC,KAAKN,EAAAA,EAAYO,QAAQ,SAACC,IAAAA;AAC/B,QAA+B,cAAA,OAAAC,GAATD,EAAAA,GAAqB;AAEzC,UAAME,KACkB,MAAtBF,GAAIG,QAAQ,IAAA,IAAcH,GAAII,OAAO,CAAA,EAAGC,YAAAA,IAAgBL;AAE1DJ,MAAAA,GAAGU,iBAAiBJ,IAAMV,GAAWQ,EAAAA,CAAAA;IACtC;AAAkB,iBAARA,KACTJ,GAAGW,YAAYf,GAAWQ,EAAAA,IACT,WAARA,KACTJ,GAAGY,YAAYhB,GAAWQ,EAAAA,IAE1BJ,GAAGa,aAAaT,IAAKR,GAAWQ,EAAAA,CAAAA;EAEnC,CAAA,GAEGT,MACFA,GAAOmB,YAAYd,EAAAA,GAAAA;AAItB;AAAA,SAEKe,EAA0BC,IAAAA;AAC9BA,EAAAA,GAAMC,eAAAA,GACND,GAAMD,gBAAAA;AACP;AAoBM,IAAA,IAAW,WAAA;AAAA,SAChB,CAAA,EAAWG,MAAAA,KAAAA,SAAAA,EAAAA,OAAOC,OAAAA,EAASC,KAAK,GAAA,EAAKC,KAAAA;AADrB;AAGF,SAAA,EACd5B,IACAC,IAAAA;AAEKD,EAAAA,MAAYA,GAAQ6B,cAKNC,MAAMC,QAAQ9B,EAAAA,IAAaA,KAAY,CAACA,EAAAA,GAChDS,QAAQ,SAACsB,IAAAA;AACbhC,IAAAA,GAAQ6B,UAAUI,SAASD,EAAAA,KAC9BhC,GAAQ6B,UAAUK,IAAIF,EAAAA;EAEzB,CAAA;AACF;AAEeG,SAAAA,EACdnC,IACAC,IAAAA;AAEKD,EAAAA,MAAYA,GAAQ6B,cAKNC,MAAMC,QAAQ9B,EAAAA,IAAaA,KAAY,CAACA,EAAAA,GAChDS,QAAQ,SAACsB,IAAAA;AACdhC,IAAAA,GAAQ6B,UAAUI,SAASD,EAAAA,KAC7BhC,GAAQ6B,UAAUO,OAAOJ,EAAAA;EAE5B,CAAA;AACF;AC7FM,IAAA;AAAA,IAAA,IAAkB;AAAlB,IAEMK,IAAiB;AAFvB,IAGkBC,IAAG;AAHrB,IAOkBC,IAAG,CAC1BC,GAPwB,IASxBH,GACAC,GAP4B,IACC,EAAA;AALxB,ICqBcG,IAAAA,WAAAA;AAOnB,WAIqBA,GAAAC,IAAAA;AAAA,QAAAC,KAAAC,MAAAA,KAHnBC,GAAAA,cACAC,KAEmBJ,GAFnBI,aAEmBC,KAAAL,GADnBM,YAAAA,KAAAA,WAAaD,KAAA,CACM,IAAA3C;AAAA,SAVrB6C,YAAAA,QAUqBL,KATrBM,OAAAA,QACAC,KAAAA,QAAAA,QACAN,KAAAA,eAAAA,QACAO,KAAAA,WAAAA,OAOER,KAAKK,YAAY3C,EACf,OACA+C,EAAG,aAAaL,GAAWC,SAAAA,CAAAA,GAG7BL,KAAKM,OAAO5C,EACV,QACA,CAAC,IAAI0C,GAAWE,IAAAA,EAAMvB,KAAK,GAAA,GAC3BiB,KAAKK,WACL,EACEK,cAAc,QACdC,SAASjC,GACTkC,YAAYlC,GACZmC,YAAYnC,GACZoC,UAAUpC,EAAAA,CAAAA,GAIdsB,KAAKO,QAAQ7C,EACX,SACA,CAAC,SAAS0C,GAAWG,KAAAA,EAAOxB,KAAK,GAAA,GACjCiB,KAAKM,MACL,EACErC,MAAM,QACN8C,aAAab,MAAe,UAC5Bc,SAAShB,KAAKgB,SACdC,SAAS,SAACC,IAAAA;AAAD,aAAAA,GAAYD,QAAQC,EAAAA;IAApB,GACTC,YAAY,SAACD,IAAAA;AAAAA,aAAUnB,GAACoB,WAAWD,EAAAA;IAAvB,GACZE,SAASpB,KAAKoB,SACdC,QAAQrB,KAAKqB,QAMbV,SAAS,WAAA;AACPZ,MAAAA,GAAKQ,MAAMe,MAAAA,GACXvB,GAAKQ,MAAMgB,cAAc,IAAA,MAAU,OAAA,CAAA;IACpC,EAAA,CAAA,GAILvB,KAAKC,eAAeA;EACrB;AAAA,MAAAiB,KAAAM,GAAA;AAAA,SAAAN,GAEDE,UAAA,WAAA;AACEK,MAAazB,KAAKM,MAAM,QAAA;EACzB,GAAAY,GAEDG,SAAA,WAAA;AACE9B,MAAgBS,KAAKM,MAAM,QAAA;EAC5B,GAAAY,GAEKQ,WAAS/C,SAAAA,IAAAA;AAAY,QAAA;AAAA,UAAAgD,KAER3B;AAFQ,aACzBtB,EAAgBC,EAAAA,GFalBY,EAJAnC,KERmBuE,GAAKtB,WAAW,OAAA,GFanCoB,EAAarE,IEb+B,SAAA,GAAA,QAAA,QAEpCuE,GAAK1B,aAAa,EAAE2B,OAAOD,GAAKpB,MAAMsB,MAAAA,CAAAA,CAAAA,EAAAA,KAAAA,WAAAA;AAC5CtC,UAAgBoC,GAAKtB,WAAW,SAAA;MALP,CAAA;IAAA,SAAAmB,IAAA;AAAA,aAAA,QAAA,OAAAA,EAAA;IAAA;AAAA,QFU3BpE;EAAAA,GAAAA,GEFA4D,UAAA,WAAA;AACOhB,SAAKQ,aAIVjB,EAAgBS,KAAKK,WAAW,OAAA,GAChCL,KAAKQ,WAAAA;EACN,GAEDS,GAAAA,UAAA,SAAQtC,IAAAA;ADtGgB,WCuGlBA,GAAMmD,YAIVvC,EAAgBS,KAAKK,WAAW,CAAC,WAAW,QAAA,CAAA,GAE5CL,KAAKO,MAAMsB,QAAQ,IAEnBpE,SAASsE,KAAKT,MAAAA,GACd7D,SAASsE,KAAKC,KAAAA;EACf,GAAAd,GAEDC,aAAA,SAAWxC,IAAAA;AACLA,IAAAA,GAAMmD,YAAYlC,KAItBI,KAAK0B,SAAS/C,EAAAA;EACf,GAEDsD,GAAAA,WAAA,SAASL,IAAAA;AACP5B,SAAKO,MAAMsB,QAAQD;EACpB,GAAAJ;AAAA,EAAA;AD9HI,IEacU,IAAAA,WAAAA;AASnB,WAIkBA,GAAApC,IAAAA;AAAA,QAAAC,KAAAC,MAAAmC,KAAArC,GAHhBqC,aAGgBhC,KAAAL,GAFhBM,YAAAA,KAAAA,WAAaD,KAAA,CAEG,IADhBiC,IAAAA,KAAAA,GAAAA;AACgBpC,SAZlBmC,cAAAA,QAYkBnC,KAXlBqC,WAAAA,IAWkBrC,KAVlBsC,UAA0B,CAAA,GAURtC,KARlBK,YAAAA,QACAkC,KAAAA,aAAAA,QACAH,KAAAA,kBAAAA,QA6EAzB,KAAAA,UAAU,SAAChC,IAAAA;AACT,UAAgC,cAAA,OAAAuC,GAAhBiB,aAAhB;AAIA,YAAYK,KAAG7D,GAAM6D;AACrB,YACGA,MACAzC,GAAKM,UAAUhB,SAASmD,EAAAA,KACxBA,GAAOC,aAAa,UAAA,GAHvB;AAQA,cAAAzE,KAAY0E,OAAOF,GAAOG,aAAa,UAAA,CAAA;AACvC5C,UAAAA,GAAKoC,YAAY,EAAES,QAAQ7C,GAAKuC,QAAQO,EAAAA,EAAAA,CAAAA;QAHvC;MATA;IAaF,GAtFC7C,KAAKmC,cAAcA,IACnBnC,KAAKoC,kBAAoBA,KACrB1E,EACE,OACA+C,EAAGL,GAAW0C,QAAAA,GAAAA,QAEd,EAAEC,MAAMX,GAAAA,CAAAA,IAAAA,QAIdpC,KAAKK,YAAY3C,EACf,OACA+C,EAAG,WAAWL,GAAW4C,UAAAA,CAAAA,GAE3BhD,KAAKK,UAAUhC,iBAAiB,SAAS2B,KAAKW,SAAAA,IAAS,GAEvDX,KAAKuC,aAAa7E,EAA8B,OAAO+C,EAAGL,GAAW6C,IAAAA,CAAAA;EACtE;AAAA,MAEDC,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,SAAA,SACEZ,IACAa,IAAAA;AAAwD,QAAAC,KAAApD;AAAAA,eADxDsC,OAAAA,KAA0B,CAAA,IAG1BtC,KAAKqD,MAAAA,GAELf,GAAQxE,QAAQ,SAAC8E,IAAQC,IAAAA;AACvB,UAAWS,KAAGF,GAAKb,WAAWgB,UAAAA,IAAU;AACxCD,MAAAA,GAAM9E,aAAa,YAAeqE,KAAAA,EAAAA,GAClCS,GAAMhF,YAAY6E,GAAa,EAAEP,QAAAA,GAAAA,CAAAA,GACjCQ,GAAK/C,UAAU5B,YAAY6E,EAAAA;IAC5B,CAAA,GAEGhB,GAAQkB,SAAS,KACnB/B,EAAazB,KAAKK,UAAUoD,eAAe,MAAA,GAC3ChC,EAAazB,KAAKK,WAAW,QAAA,KAClBL,KAAKoC,oBAChBpC,KAAKK,UAAU5B,YAAYuB,KAAKoC,eAAAA,GAChCX,EAAazB,KAAKK,UAAUoD,eAAe,MAAA,IAG7CzD,KAAKsC,UAAUA;EAChB,GAEDoB,GAAAA,SAAA,SAAOC,IAAAA;AASL,WAPAzE,MAAM0E,KAAK5D,KAAKK,UAAUwD,QAAAA,EAAU/F,QAAQ,SAACwF,IAAOT,IAAAA;AAAR,aACvCA,OAAKc,KACJlC,EAAa6B,IAAO,QAAA,IACpB/D,EAAgB+D,IAAO,QAAA;IAHe,CAAA,GAM5CtD,KAAKqC,WAAWsB,IAAAA,KACJrB,QAAQqB,EAAAA;EACrB,GAAAzC,GAED4C,QAAA,WAAA;AACE,WAAO9D,KAAKsC,UAAUtC,KAAKsC,QAAQkB,SAAS;EAC7C,GAAAtC,GAEDmC,QAAA,WAAA;AAGE,SAFArD,KAAKqC,WAAAA,IAEErC,KAAKK,UAAU0D;AACpB/D,WAAKK,UAAU2D,YAAYhE,KAAKK,UAAU0D,SAAAA;AAG5CxE,MAAgBS,KAAKK,UAAUoD,eAAe,MAAA,GAC9ClE,EAAgBS,KAAKK,WAAW,QAAA;EACjC,GAAAmB;AAAA,EAAA;AF/FI,IGsBayC,IAAyC,EAC3DC,UAAU,WACVC,OAAO,UACPC,YAAAA,MACAC,WAAAA,OACAC,aAAa,SAAAxE,IAAAA;AAAmB8C,SAAAA,KAAhBA,GAAAA,OAAuB2B;AAA1B,GACbpB,cAAc,SAAAqB,IAAAA;AAAmB5B,SAAAA,KAAnB4B,GAAG5B,OAAuB2B;AAA1B,GACdE,QAAQ,EACNC,MAAMC,KAAOC,SAAO,IAAMA,OAAKC,YAAAA,QAC/BC,WAAAA,MAAW,GAEbC,YAAY,GACZC,gBAAgB,GAChBC,iBAAAA,OACAC,aAAAA,MACAhF,aAAa,iBACbiF,kBAAkB,gBAClB/C,iBAAiB,IACjBgD,kBAAkB,KAClBC,WAAW,IACXjF,YAAY,EACVC,WAAW,yDACXiF,QAAQ,4CACRC,aAAa,SACbC,QAAQ,uBACRlF,MAAM,IACNC,OAAO,IACPyC,YAAY,IACZC,MAAM,IACNH,UAAU,uBAAA,GAEZ2C,cAAAA,MACAC,mBAAmB,KACnBC,WAAAA,OACAC,YAAAA,OACAC,WAAAA,KAAW;AHzDN,IG4DDC,IACJ;AH7DK,IG6DL,IA+F6B,EAC7BC,SAAc9B,EAAAA,CAAAA,GAAAA,CAAAA,GACd7D,YAAiB6D,EAAAA,CAAAA,GAAAA,EAAe7D,UAAAA,GAEhC4F,YAAWD,SAAAA,IAAAA;AAA6B,MC9JxCE,IACAC,IACAC,IAEAC,ID0JwCrG,KAAAC;AACtC,MAAA,CAAK2E;AACH,UAAM,IAAA,MAAUmB,CAAAA;AAGlB,MAAA,CAAKC,GAAQM;AACX,UAAA,IAAMC,MAAU,kCAAA;AAIlBtG,OAAK+F,UAAe9B,EAAAA,CAAAA,GAAAA,GAAmB8B,EAAAA,GACvC/F,KAAKI,aAAkBmG,EAAA,CAAA,GAAAvG,KAAKI,YAAe2F,GAAQ3F,UAAAA,GAEnDJ,KAAKwG,UAAU,IAAMC,kBACrBzG,KAAKI,WAAWC,aAAmC,wBAAAL,KAAK+F,QAAQ5B,OAEhEnE,KAAK0G,gBAAgB,IAAA7G,EAAkB,EACrCK,aAAaF,KAAK+F,QAAQ7F,aAC1BE,YAAY,EACVC,WAAWL,KAAKI,WAAWC,WAC3BC,MAAMN,KAAKI,WAAWE,MACtBC,OAAOP,KAAKI,WAAWG,MAAAA,GAEzBN,cAAc,SAAC2C,IAAAA;AAAW,WAAA7C,GAAK2B,SAASkB,EAAAA;EAA1B,EAAA,CAAA,GAGhB5C,KAAKsF,SAAS5H,EACZ,KACAsC,KAAKI,WAAWkF,QAChBtF,KAAK0G,cAAcrG,WACnB,EACEsG,OAAO3G,KAAK+F,QAAQ7F,aACpB0G,MAAM,KACNjG,SAAS,SAACO,IAAAA;AAAAA,WAAUnB,GAACY,QAAQO,EAAAA;EAApB,EAAA,CAAA,GAIX2F,WAASC,wBAAwB9G,KAAKsF,MAAAA,GAExCtF,KAAKuF,cAAc7H,EACjB,UACAsC,KAAKI,WAAWmF,aAChBvF,KAAK0G,cAAcpG,MACnB,EACEyG,MAAM,KACN,cAAc/G,KAAK+F,QAAQZ,kBAC3BxE,SAAS,WAAA;AACgC,WAAnCZ,GAAK2G,cAAcnG,MAAMsB,QAC3B9B,GAAKiH,MAAAA,IAELjH,GAAKkH,aAAa,MAAA,IAAM;EAE3B,EAAA,CAAA,GAIHJ,WAASC,wBAAwB9G,KAAKuF,WAAAA,GAEpCvF,KAAK+F,QAAQN,iBACfzF,KAAKkH,aAAa,IAAAhF,EAAe,EAC/BC,aAAa,SAAAX,IAAA;AAAGoB,QAAAA,KAAAA,GAAAA;AACd7C,IAAAA,GAAK2G,cAAcnG,MAAMsB,QAAQe,GAAO2B,OACxCxE,GAAK2B,SAAS,EAAEE,OAAOgB,GAAO2B,OAAO4C,MAAMvE,GAAAA,CAAAA;EAC5C,GACDxC,YAAY,EACV4C,YAAYhD,KAAKI,WAAW4C,YAC5BC,MAAMjD,KAAKI,WAAW6C,MACtBH,UAAU9C,KAAKI,WAAW0C,SAAAA,GAE5BV,iBAAiBpC,KAAK+F,QAAQ3D,gBAAAA,CAAAA,GAGhCpC,KAAK0G,cAAcpG,KAAK7B,YAAYuB,KAAKkH,WAAW7G,SAAAA,GAEpDL,KAAK0G,cAAcnG,MAAMlC,iBACvB,UCzON4H,KD2OQ,SAAC/E,IAAAA;AAAAA,WAAyBnB,GAACqH,WAAWlG,EAAAA;EAAtC,GAAA,YC1ORgF,KD2OQlG,KAAK+F,QAAQL,uBC3OrBQ,KAAO,MAAA,WACPC,OAAAA,KAAAA,QAIgC,WAAA;AAAA,QAAAkB,KAAA,CAAA,EAAAC,MAAAC,KAAAC,SAAAA;AAC1BpB,IAAAA,MACFqB,aAAarB,EAAAA,GAGfA,KAAUsB,WAAW,WAAA;AACnBtB,MAAAA,KAAU,MAELD,MACHF,GAAE0B,MAAAA,QAAIN,EAAAA;IAET,GAAEnB,EAAAA,GAECC,MAAAA,CAAcC,MAChBH,GAAE0B,MAAAA,QAAIN,EAAAA;EAET,IAAA,IDwNK,GAGFrH,KAAK0G,cAAcnG,MAAMlC,iBACvB,WACA,SAAC6C,IAAAA;AAAqB,WAAAnB,GAAK6H,aAAa1G,EAAAA;EAAxC,GAAA,IACA,GAGFlB,KAAK0G,cAAcnG,MAAMlC,iBACvB,WACA,SAAC6C,IAAAA;AAAqB,WAAAnB,GAAKkH,aAAa/F,IAAAA,IAAG;EAA3C,GAAA,IACA,IAIJlB,KAAK0G,cAAcpG,KAAKjC,iBACtB,SACA,SAAC6C,IAAAA;AACCA,IAAAA,GAAEtC,eAAAA;EACH,GAAA,KACD;AAEH,GAEDiJ,OAAAA,SAAMC,IAAAA;AACJ,MAA8BC,KAAA/H,KAAK+F,SAA3B3B,KAAAA,GAAAA,YAAYD,KAAAA,GAAAA;AAOpB,MALAnE,KAAK8H,MAAMA,IACP1D,MACFpE,KAAKwG,QAAQwB,MAAMF,EAAAA,GAGP,UAAV3D,IAAiB;AACnB,QAAA8D,KAAaH,GACVI,aAAAA,EACAC,cAAc,4BAAA;AAEjBnI,SAAKK,YAAY3C,EACf,OACA,iDAAA,GAGFsC,KAAKK,UAAU5B,YAAYuB,KAAK0G,cAAcpG,IAAAA,GAC9C8H,GAAM3J,YAAYuB,KAAKK,SAAAA;EACxB;AAGD,SADEwG,WAASC,wBAAwB9G,KAAK0G,cAAcpG,IAAAA,GAC/CN,KAAK0G,cAAcrG;AAC3B,GAEDgI,UAvI6B,WAAA;AAwI3B,MAAAC;AACA,SADgB9I,SAAhB8I,KAAAtI,KAAKK,cAAWb,GAAAA,OAAAA,GAEjBQ;AAAA,GAEDuI,MA5I6B,WAAA;AA6I3B,MAA6BC,KAAAxI,KAAK0G,eAAfnG,KAAAA,GAAAA;AACnBkB,IADQpB,GAAAA,WACgB,QAAA,GACxBE,GAAMe,MAAAA;AACP,GAED0F,OAAAA,WAAAA;AAEEzH,IADsBS,KAAK0G,cAAnBrG,WACmB,QAAA,GAC3BL,KAAKiH,aAAAA;AACN,GAEDtG,SAxJ6B,SAwJrBhC,IAAAA;AACNA,EAAAA,GAAMC,eAAAA,GACND,GAAMD,gBAAAA,GAEgBsB,KAAK0G,cAAnBrG,UAEMpB,UAAUI,SAAS,QAAA,IAC/BW,KAAKgH,MAAAA,IAELhH,KAAKuI,KAAAA;AAER,GAEDX,cArK6B,SAqKhBjJ,IAAAA;AACX,MAAA,OACE,CAACiB,GAAWH,GAAgBC,CAAAA,EAAcxB,QAAQS,GAAMmD,OAAAA;AAO1D,QAFAnD,GAAMC,eAAAA,GAEFD,GAAMmD,YAAYlC,GAAtB;AAMA,UAAM6I,KAAMzI,KAAKkH,WAAWpD,MAAAA,IAAU;AACtC,UAAA,EAAI2E,KAAM,IAAV;AAIA,YAAApG,KAAqBrC,KAAKkH,WAAlB7E,UACEqG,KAAG/J,GAAMmD,YAAYrC,IAAiB4C,KAAW,IAAIA,KAAW,GAGhEY,KAAGjD,KAAKkH,WAAWxD,OAFjBgF,KAAO,IAAID,KAAMC,KAAOD,KAAM,IAAIC,EAAAA;AAG9C1I,aAAK0G,cAAcnG,MAAMsB,QAAQoB,GAAKsB;MAPrC;IALA,OAJD;AACE,UAAUoE,KAAG3I,KAAKkH,WAAWxD,OAAO1D,KAAKkH,WAAW7E,QAAAA;AACpDrC,WAAK0B,SAAS,EAAEE,OAAO5B,KAAK0G,cAAcnG,MAAMsB,OAAOsF,MAAMlE,GAAAA,CAAAA;IAE9D;AAaF,GAEDgE,cAAatI,SAAAA,IAA6BiK,IAAAA;AACxC,MAAA,WADwCA,OAAAA,KAAAA,QAAQ,CAC5CjK,MH7VkB,OG6VTA,GAAMmD,SAAnB;AAIA,QAAqC+G,KAAA7I,KAAK+F,SAAtBN,KAAAA,GAAAA;AAAAA,KAEhBmD,MAFIhD,GAAAA,eAGN5F,KAAK0G,cAAcnG,MAAMsB,QAAQ,IACjC7B,KAAKwG,QAAQsC,YAAAA,IAGXrD,MACFzF,KAAKkH,WAAW7D,MAAAA;EAVjB;AAYF,GAEK+D,YAlNuB,SAkNZzI,IAAAA;AAlNY,MAAA;AAAA,QAAAuC,KAwNNlB;AALrB,QAAIL,EAAazB,QAAQS,GAAMmD,OAAAA,IAAAA;AAC7B,aACDiH,QAAAC,QAAAA;AAED,QAAMpH,KAASjD,GAAM6D,OAA4BX,OACjDwE,KAAqB1E,GAAKoE,QAAlBM,UANY4C,KAAA,WAAA;AAAA,UAQhBrH,GAAM4B;AARU,eAAAuF,QAAAC,QASE3C,GAAU6C,OAAO,EAAEtH,OAAAA,GAAAA,CAAAA,CAAAA,EAAnCU,KAAAA,SAAAA,IAAAA;AACJA,UAAAA,KAAUA,GAAQgF,MAAM,GAAG3F,GAAKoE,QAAQf,cAAAA,GACxCrD,GAAKuF,WAAWhE,OAAOZ,IAASX,GAAKoE,QAAQ5C,YAAAA;QAX3B,CAAA;AAalBxB,MAAAA,GAAKuF,WAAW7D,MAAAA;IAEnB,EAfqB;AAerB,WAAA0F,QAAAC,QAAAC,MAAAA,GAAAE,OAAAF,GAAAE,KAAA,WAAA;IAAA,CAAA,IAAA,MAAA;EAAA,SAjO4B3H,IAAA;AAAA,WAAA,QAAA,OAAAA,EAAA;EAAA;AAAA,GAmOvBE,UAnOuB,SAmOdE,IAAAA;AAnOc,MAAA;AAoO3B,QAAAwH,KAAApJ;AADkB,WAClBoJ,GAAKlC,WAAW7D,MAAAA,GAAAA,QAAAA,QACK+F,GAAKrD,QAAlBM,SAEwB6C,OAAOtH,EAAAA,CAAAA,EAAjCU,KAAAA,SAAAA,IAAAA;AAEFA,MAAAA,MAAWA,GAAQkB,SAAS,KAC9B4F,GAAKC,WAAW/G,GAAQ,CAAA,GAAIV,EAAAA;IAE/B,CAAA;EAAA,SA5O4BJ,IAAA;AAAA,WAAA,QAAA,OAAAA,EAAA;EAAA;AAAA,GA8O7B6H,YA9O6B,SA8OlBzG,IAAQhB,IAAAA;AACjB,MAAiC0H,KAAAtJ,KAAK+F,SAA9BJ,KAAAA,GAAAA,WAAWE,KAAAA,GAAAA,WAEbW,KAAUxG,KAAKwG,QAAQ+C,UAAAA;AACzB/C,EAAAA,GAAQhD,UAAUxD,KAAK+F,QAAQhB,cACjC/E,KAAKwG,QAAQgD,YAAYhD,GAAQ,CAAA,CAAA;AAGnC,MAAAiD,KAAezJ,KAAK0J,UAAU9G,IAAQhB,EAAAA;AAElCiE,EAAAA,MACF7F,KAAK2J,UAAU/G,EAAAA,GAGjB5C,KAAK8H,IAAI8B,UAAU,0BAA0B,EAC3CC,UAAUjH,IACV6B,QAAAA,GAAAA,CAAAA,GAGEkB,MACF3F,KAAK8J,aAAAA;AAER,GAEDA,cAAY,WAAA;AACV,MAAQzJ,KAAcL,KAAK0G,cAAnBrG;AAEJA,EAAAA,GAAUpB,UAAUI,SAAS,QAAA,KAC/BE,EAAgBc,IAAW,QAAA,GAG7BL,KAAKiH,aAAAA;AACN,GAEDyC,WAAU9G,SAAAA,IAAQhB,IAAAA;AAAAA,MAAAA,KAAAA,MACoCmI,KAAA/J,KAAK+F,SAAzCA,KAAhBgE,GAAQtF,QAAiBJ,KAAAA,GAAAA,WAAWC,KAAAA,GAAAA,aAC9BG,KAAS,IAAMuF,SAAO,CAACpH,GAAOqH,GAAGrH,GAAOsH,CAAAA,GAAInE,EAAAA,GACpCoE,KAAGvH,GAAO2B;AAuBxB,SArB2B,cAAA,OAAhBD,OACT6F,KAAa7F,GAAY,EAAE1C,OAAAA,IAAOgB,QAAAA,GAAAA,CAAAA,IAGpC6B,GAAO2F,UAAUD,EAAAA,GAEjBnK,KAAKwG,QAAQ6D,SAAS5F,EAAAA,GAElBJ,MACFI,GAAO6F,UAAAA,GAGLvE,GAAQjB,aACVL,GAAO8F,GAAG,WAAW,SAAClD,IAAAA;AACpBmD,IAAAA,GAAK1C,IAAI8B,UAAU,4BAA4B,EAC7CC,UAAUpF,GAAOgG,UAAAA,GACjB9L,OAAO0I,GAAAA,CAAAA;EAEV,CAAA,GAAAqD;AAIJ,GAEDf,WAAU/G,SAAAA,IAAAA;AACR,MAAA+H,KAAyC3K,KAAK+F,SAAtCd,KAAAA,GAAAA,iBAAiBC,KAAzByF,GAAyBzF,aAEP0F,KAAGhI,GAAOiI,SACxB,IAAMC,eAAalI,GAAOiI,MAAAA,IAC1B,IAAME,SAAOnI,GAAOqH,GAAGrH,GAAOsH,CAAAA,EAAGc,SAAS,EAAA,GAExCH,KAASD,GAAaK,QAAAA,IACxBL,KACA5K,KAAKwG,QAAQ0E,UAAAA;AAAAA,GAEZjG,MAAmB2F,GAAaK,QAAAA,KAAAA,CAAcrI,GAAOiI,UAI9C5F,MAAAA,CAAmB2F,GAAaK,QAAAA,IAH1CjL,KAAK8H,IAAIqD,QAAQN,GAAOO,UAAAA,GAAapL,KAAKqL,QAAAA,GAAW,EACnDC,SAASpG,GAAAA,CAAAA,IAGXlF,KAAK8H,IAAIyD,UAAUV,IAAQ,EAAES,SAASpG,GAAAA,CAAAA;AAMzC,GAEDmG,SArU6B,WAAA;AAsU3B,MAAAG,KAAuCxL,KAAK+F,SAAnBV,KAAAA,GAAAA;AACzB,SADAmG,GAAQvG,kBACiBjF,KAAK8H,IAAIuD,QAAAA,IAAYhG;AAC/C,EAAA;AAGqBoG,SAAAA,IAAAA;AACtB,MAAA,CAAK9G;AACH,UAAM,IAAA,MAAUmB,CAAAA;AAGlB,MAAM4F,KAAaC,UAAQC,OAAOD,CAAAA;AAClC,SAAWD,EAAAA,IACZ,CAAA,EAAApE,MAAAC,KAAAC,SAAAA,CAAAA;AAAA;AAAA,CEtdD,SAAYqE,IAAAA;AACVA,EAAAA,GAAAA,GAAA,SAAA,CAAA,IAAA,UACAA,GAAAA,GAAA,UAAA,CAAA,IAAA;AAFF,EAAYA,MAAAA,IAGX,CAHsB,EAAA;AA2BOC,IAAAA,IAAAA,WAAAA;AAO5B,WAAAtK,GAAYuE,IAAAA;AAAAA,eAAAA,OAAAA,KAA2B,CAAA,IAAA,KAFvCA,UAAAA,QAGE/F,KAAK+F,UAAUA;EAChB;AAAA,MAAAgG,KAAAvK,GAAA;AAAA,SAAAuK,GAODC,iBAAA,SAAeC,IAAAA;AAAAA,eAAAA,OAAAA,KAAyB,CAAE;AACxC,QAASC,KAAA3F,EAAA,CAAA,GAAQvG,KAAK+F,QAAQkG,QAAWA,EAAAA;AACzC,WAAA,OAAcpO,KAAKqO,EAAAA,EAChBpE,IACC,SAAC/J,IAAAA;AAAAA,aAA6BoO,mBAACpO,EAAAA,IAA/B,MAAuCoO,mBAAmBD,GAAInO,EAAAA,CAAAA;IAA9D,CAAA,EAEDgB,KAAK,GAAA;EACT,GAAAgN,GAEDK,SAAA,SAAOC,IAAaJ,IAAAA;AAClB,WAAAzK,KAAiB,MAAAxB,KAAKgM,eAAeC,EAAAA;EACtC,GAAAF,GAEK7C,SAAOnD,SAAAA,IAAAA;AAAAA,QAAAA;AACC,UAAA3C,KAAApD,MAANqM,KAAMjJ,GAAKkJ,SAAS,EACxB1K,OAAOmE,GAAQnE,OACf3D,MAAM4N,EAAYU,OAAAA,CAAAA;AAHc,aAMZC,QAAAA,QAAAA,MAAMH,EAAAA,CAAAA,EAAAA,KAAAA,SAAtBI,IAAAA;AAN4B,eAAA1D,QAAAC,QAOCyD,GAAQC,KAAAA,CAAAA,EAArCA,KAAAA,SAAAA,IAAAA;AACN,iBAAOtJ,GAAKuJ,MAAM,EAAExF,MAAMuF,GAAAA,CAAAA;QARQ,CAAA;MAAA,CAAA;IAAA,SAAAlL,IAAA;AAAA,aAAA,QAAA,OAAAA,EAAA;IAAA;EAAA,GAAAA;AAAA,EAAA;AA7BRsK,IA6BQ,IAAA,SAAAtK,IAAA;AAAA,WAAAxD,KAAA;AAAA,WAAAwD,GAAA,MAAA,MAAA,SAAA,KAAA;EAAA;AAAA,IAAAxD,IAAAwD,EAAA;AAAA,MAAAhE,KAAAQ,GAAA;ACpBA8N,SAAAA,GAIpCQ,WAAA,WAAA;AAEE,WAAO;EACR,GAMDM,GAAAA,0BAAA,SAAwBC,IAAAA;AACtB,QAAA3L,KACE2L,GAAIC,KAAK,SAACC,IAAAA;AAAD,aAA0B,WAAAvL,GAAfwL;IAAX,CAAA,KACTH,GAAIC,KAAK,SAACC,IAAAA;AAAD,aAA0B,cAAhBA,GAACC;IAAX,CAAA;AACX,WAAYC,KAAGJ,GAAI3O,QAAQ+O,EAAAA,IAAS;EACrC,GAAAzP,GAMD0P,WAAA,SAAStK,IAAAA;AACP,QAAAuK,IAAAC,IAAAC,IAAAC;AAAA,WAAO,CAAA,SAEL1K,KAAAA,GAAO2K,gBAAAA,SAAPJ,GACE,QAAAnN,KAAK4M,wBACHhK,GAAO4K,iBAAiBD,aAD1B,OAAA,CAAA,GAHG,SAAAH,KAQLxK,GAAO6K,QAAAA,SAAPL,GAAAA,QACEpN,KAAK4M,wBAAwBhK,GAAO4K,iBAAiBC,KAAAA,OAAAA,CAAAA,GAGvD7K,GAAO8K,eACL1N,KAAK4M,wBAAwBhK,GAAO4K,iBAAiBE,cAAAA,CAAAA,GAblD,SAAA1P,KAgBL4E,GAAO+K,YAAAA,SAAPN,GACErN,KAAK4M,wBAAwBhK,GAAO4K,iBAAiBG,QAAAA,CAAAA,GAGvD,SApBKL,KAoBL1K,GAAOgL,WAAAA,SAAPN,GAAA,OAAA,EAECzO,OAAOC,OAAAA,EACPC,KAAK,IAAA;EACT,GAAAvB,GAEDmP,QAAA,SAAMkB,IAAAA;AACJ,QAAA9N,KAAAC;AAAA,WAAe6N,GAAC1G,KAAK2G,KAAKhG,IAAI,SAACiE,IAAAA;AAAD,aAAQ,EACpC7B,GAAG6B,GAAEgC,QAAQC,KACb/D,GAAG8B,GAAEgC,QAAQE,KACb1J,OAAOxE,GAAKmN,SAASnB,EAAAA,GACrBlB,QAAQ,MACRqD,KAAKnC,GAAAA;IALuB,CAAA;EAO/B,GAEK7C,GAAAA,SAAStH,SAAAA,IAAAA;AAAAA,QAAAA,KAAAA,GAAAA;AAAAA,QAAAA;AAGe,UAAAD,KAAA3B,MAFhBiM,KAAoB,YAAA,OAAjBrK,KAA4B,EAAEA,OAAAA,GAAAA,IAAUA;AADnB,aAAAmH,QAAAC,QAGdwD,MAAM7K,GAAK2K,SAAAA,GAAY,EAC3C6B,QAAQ,QACRpM,MAAMqM,KAAKC,UACN9H,EAAA,CAAA,GAAA5E,GAAKoE,QAAQkG,QACbA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAP6B9C,KAAA,SAG9BsD,IAAAA;AAH8B,eAAA1D,QAAAC,QAWjByD,GAAQC,KAAAA,CAAAA,EAXSvD,KAAA,SAW9BuD,IAAAA;AACN,iBAAO/K,GAAKgL,MAAM,EAAExF,MAAMuF,GAAAA,CAAAA;QAZU,CAAA;MAarC,CAAA;IA1EmCZ,SAAAA,IAAAA;AAAAA,aAAAA,QAAAA,OAAAA,EAAAA;IAAAA;EAAAA,GAAAA;AAAAA,EAAAA,CAAAA;ADTRA,ICSQA,IAAAA,SAAAA,IAAAA;AAAAA,WAAAA,KAAAA;AAAAA,aAAAA,IAAAA,KAAAA,UAAAA,QAAAA,KAAAA,IAAAA,MAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAAAA,IAAAA;AAAAA,MAAAA,GAAAA,EAAAA,IAAAA,UAAAA,EAAAA;ACRpCQ,YAAAA,KAAAA,GAAAA,KAAAA,MAAAA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,CAAAA,KAAAA,MAFAgC,YAAY,kDAEZhC;EAAAA;AAAAA,IAAAA,IAAAA,EAAAA;AAAAA,MAAAA,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,WAAA,SAAAxM,IAAAA;AAAAA,QAA+D8B,KAAA9B,GAApD8B,OACGqK,KAAoB,YAAA,OAAVrK,KAAqB,EAAE2M,GAAG3M,GAAAA,IAAUA;AAG1D,WAFAqK,GAAOuC,QAFsD1O,GAA7C0O,OAIJpC,KAAAA,OAAOpM,KAAKsO,WAAWrC,EAAAA;EACpC,GAEDU,GAAAA,QAAA,SAAMkB,IAAAA;AACJ,WAA0C,MAAtCA,GAAS1G,KAAKsH,aAAajL,SACtB,CAAA,IAGFqK,GAAS1G,KAAKsH,aAAa,CAAA,EAAGC,UAAU5G,IAAI,SAACiE,IAAAA;AAAD,aAAQ,EACzD7B,GAAG6B,GAAE4C,MAAMC,YAAY,CAAA,GACvB3E,GAAG8B,GAAE4C,MAAMC,YAAY,CAAA,GACvBrK,OAAOwH,GAAE8C,QAAQC,kBACjBjE,QAAQ,CACN,CAACkB,GAAEgD,KAAK,CAAA,GAAIhD,GAAEgD,KAAK,CAAA,CAAA,GACnB,CAAChD,GAAEgD,KAAK,CAAA,GAAIhD,GAAEgD,KAAK,CAAA,CAAA,CAAA,GAErBb,KAAKnC,GAAAA;IAR4C,CAAA;EAUpD,GAEK7C,GAAAA,SAAStH,SAAAA,IAAAA;AAAAA,QRnCfyK,IACApG,IAEY+I,IQgCGpN,KAAAA,GAAAA;AAAAA,QAAAA;AAGX,UAAAD,KAAA3B,MAFSwO,KAAA,mBAAoBS,KAAKC,IAAAA;AADA,aAEjBC,QAAAA,SRrCrB9C,KQsCI1K,GAAK2K,SAAS,EAAE1K,OAAAA,IAAO4M,OAAAA,GAAAA,CAAAA,GRrC3BvI,KQsCIuI,IRpCQQ,KAAGtR,EAAc,UAAU,MAAMD,SAASsE,IAAAA,GACtDiN,GAAOxQ,aAAa,QAAQ,iBAAA,GAErB,IAAAuK,QAAY,SAACC,IAAAA;AACjBoG,eAAenJ,EAAAA,IAAM,SAACyG,IAAAA;AACrBsC,UAAAA,GAAOxP,OAAAA,GAAAA,OACe4P,OAACnJ,EAAAA,GACvB+C,GAAQ0D,EAAAA;QACT,GAEDsC,GAAOxQ,aAAa,OAAO6N,EAAAA;MAC5B,CAAA,EAAA,EQqBqClD,KAAA,SAE9BuD,IAAAA;AAKN,eAAO/K,GAAKgL,MAAM,EAAExF,MAAMuF,GAAAA,CAAAA;MAPU,CAAA;IAAA,SAAAlL,IAAA;AAAA,aAAA,QAAA,OAAAA,EAAA;IAAA;EAAA,GAAAN;AAAA,EA9BE4K,CAAAA;AFKZA,IG1BTuD,IAInBf,SAAAA,IAAAA;AAAAA,WAAAA,KAAAA;AAAAA,aAAAA,IAAAA,KAAAA,UAAAA,QAAAA,KAAAA,IAAAA,MAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAAAA,IAAAA;AAAAA,MAAAA,GAAAA,EAAAA,IAAAA,UAAAA,EAAAA;AAGAhC,YAHAgC,KAAAA,GAAAA,KAAAA,MAAAA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,CAAAA,KAAAA,MAAAA,YACE,4EAEFhC;EAAAA;AAHAgC,IAAAA,IAAAA,EAAAA;AAGAhC,MAAAA,KAAAA,GAAAA;AAPwCR,SAOxCQ,GAAAA,WAAA,SAAoCxM,IAAAA;AAAA,QAAA8B,KAAA9B,GAAzB8B,OACHqK,KAA0B,YAAA,OAAVrK,KAAqB,EAAEmF,MAAMnF,GAAAA,IAAUA;AAG7D,WAFAqK,GAAOqD,IAAI,QAEClD,KAAAA,OAAOpM,KAAKsO,WAAWrC,EAAAA;EACpC,GAEDU,GAAAA,QAAA,SAAM/J,IAAAA;AACJ,WAAOA,GAAOuE,KAAKoI,UAAUzH,IAAI,SAACiE,IAAAA;AAAO,aAAA,EACvC7B,GAAG6B,GAAEyD,QAAQC,SAASvF,GACtBD,GAAG8B,GAAEyD,QAAQC,SAASxF,GACtB1F,OAAOwH,GAAE3M,MACTyL,QAAQ,CACN,CAACkB,GAAE2D,OAAOC,MAAM5D,GAAE2D,OAAOE,IAAAA,GACzB,CAAC7D,GAAE2D,OAAOG,MAAM9D,GAAE2D,OAAOI,IAAAA,CAAAA,GAE3B5B,KAAKnC,GAAAA;IAR0B,CAAA;EAUlC,GAzBuCD;AAAAA,EAAAA,CAAAA;AH0BZA,IIyCTiE,IAWnB,SAAAC,IAAAA;AAAA,WAAAD,GAAYhK,IAAAA;AAAAA,QAAAA;AAAmC,WAAA,WAAnCA,OAAAA,KAAiC,CAAA,KAC3ChG,KAAMgG,GAAAA,KAAAA,MAAAA,EAAAA,KADuC/F,MAF/CiQ,OAAAA,QAIElQ,GAAKkQ,OAAOlK,GAAQkK,QAAQ,yBAC7BlQ;EAAA;AAHDmQ,IAAAH,IAAAC,EAAAA;AAAAA,MAYA1D,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,WAAA,SAAAxM,IAAAA;AAAW8B,QAAAA,KAAAA,GAAAA;AACT,WADwC9B,GAAxB7B,SAcE4N,EAACsE,UAEH/D,KAAAA,OAAUpM,KAAKiQ,OAAmBG,eADP,YAAA,OAAVxO,KAAqB,CAA5B,IAAiCA,EAAAA,IAOhD5B,KAAKoM,OAAUpM,KAAKiQ,OAAAA,oBADR,YAAA,OAAVrO,KAAqB,EAAEmF,MAAMnF,GAAAA,IAAUA,EAAAA;EAGrD,GAAA5D,GAED2O,QAAA,SAAMkB,IAAAA;AACJ,WAAOA,GAAS1G,KAAKkJ,SAASvI,IAAI,SAAC0H,IAAAA;AACjC,UAAMc,KAA+B,EACnCpG,GAAGsF,GAAQC,SAASb,YAAY,CAAA,GAChC3E,GAAGuF,GAAQC,SAASb,YAAY,CAAA,GAChCrK,OAAOiL,GAAQe,WAAWhM,OAC1BsG,QAAQ,MACRqD,KAAKsB,GAAAA;AAYP,aAPItQ,MAAMC,QAAQqQ,GAAQT,IAAAA,KAAiC,MAAxBS,GAAQT,KAAKvL,WAC9C8M,GAAIzF,SAAS,CACX,CAAC2E,GAAQT,KAAK,CAAA,GAAIS,GAAQT,KAAK,CAAA,CAAA,GAC/B,CAACS,GAAQT,KAAK,CAAA,GAAIS,GAAQT,KAAK,CAAA,CAAA,CAAA,IAI5BuB;IACR,CAAA;EACF,GAAApP;AAAA,EAtEyC4K,CAAAA;AJzCdA,IIyCcA,IAAAA,SAAAA,IAAAA;ACzF1C,WAAY/F,GAAAA,IAAAA;AAAmC,WAAA,WAAnCA,OAAAA,KAAiC,CAAA,IAC3CA,GAAQkK,OAAO,6BACfO,GAAAjJ,KAAAvH,MAAM+F,EAAAA,KACP/F;EAAA;AAAA,SAAA,EAAAkB,IAAAM,EAAA,GAJ+CuO;AAAAA,EAAAA,CAAAA;AC8BlD,SAASU,EAAyBvG,IAAAA;AACjC,SAAOA,MAAKA,GAAEwG,cAAc9S,OAAO+S,UAAUC,eAAerJ,KAAK2C,IAAG,SAAA,IAAaA,GAAW,UAAIA;AACjG;AAMA,IA8DI2G;AA9DJ,IAyCIC,IAAuBC,EAzCP,SAASC,GAAMC,IAAGC,IAAAA;AACpC,MAAID,OAAMC;AAAG,WAAA;AAEb,MAAID,MAAKC,MAAiB,YAAA,OAALD,MAA6B,YAAA,OAALC,IAAe;AAC1D,QAAID,GAAEE,gBAAgBD,GAAEC;AAAa,aAAA;AAErC,QAAIC,IAAQC,IAAGC;AACf,QAAIC,MAAMC,QAAQP,EAAAA,GAAI;AAEpB,WADAG,KAASH,GAAEG,WACGF,GAAEE;AAAQ,eAAA;AACxB,WAAKC,KAAID,IAAgB,KAARC;AACf,YAAA,CAAKL,GAAMC,GAAEI,EAAAA,GAAIH,GAAEG,EAAAA,CAAAA;AAAK,iBAAA;AAC1B,aAAA;IACD;AAID,QAAIJ,GAAEE,gBAAgBM;AAAQ,aAAOR,GAAES,WAAWR,GAAEQ,UAAUT,GAAEU,UAAUT,GAAES;AAC5E,QAAIV,GAAEW,YAAYC,OAAOC,UAAUF;AAAS,aAAOX,GAAEW,QAAAA,MAAcV,GAAEU,QAAAA;AACrE,QAAIX,GAAEc,aAAaF,OAAOC,UAAUC;AAAU,aAAOd,GAAEc,SAAAA,MAAeb,GAAEa,SAAAA;AAIxE,SADAX,MADAE,KAAOO,OAAOP,KAAKL,EAAAA,GACLG,YACCS,OAAOP,KAAKJ,EAAAA,EAAGE;AAAQ,aAAA;AAEtC,SAAKC,KAAID,IAAgB,KAARC;AACf,UAAA,CAAKQ,OAAOC,UAAUE,eAAeC,KAAKf,IAAGI,GAAKD,EAAAA,CAAAA;AAAK,eAAA;AAEzD,SAAKA,KAAID,IAAgB,KAARC,QAAY;AAC3B,UAAIa,KAAMZ,GAAKD,EAAAA;AAEf,UAAA,CAAKL,GAAMC,GAAEiB,EAAAA,GAAMhB,GAAEgB,EAAAA,CAAAA;AAAO,eAAA;IAC7B;AAED,WAAA;EACD;AAGD,SAAOjB,MAAIA,MAAKC,MAAIA;AACtB,CAAA;AAAA,CAwBA,SAAWL,IAAAA;AACPA,EAAAA,GAAaA,GAA0B,cAAI,CAAA,IAAK,eAChDA,GAAaA,GAAsB,UAAI,CAAA,IAAK,WAC5CA,GAAaA,GAAsB,UAAI,CAAA,IAAK,WAC5CA,GAAaA,GAAsB,UAAI,CAAA,IAAK;AAC/C,EAAEA,MAAiBA,IAAe,CAAE,EAAA;AAoBrC,IAAMsB,IAAN,MAAMA,GAAAA;EAUFhB,YAAAA,EAAYiB,QAAEA,IAAMC,oBAAEA,IAAkBC,SAAEA,IAAOC,QAAEA,IAAMC,IAAEA,KAxC5C,wBAwC2DC,UAAEA,IAAQC,WAAEA,KAAY,CAAA,GAAEC,QAAEA,IAAMC,OAAEA,IAAKC,QAAEA,IAAMC,SAAEA,KAAU,GAACC,KAAEA,KAAM,2CAAyCC,SAAEA,GAAAA,GAAAA;AAkBvL,QAjBAC,KAAKC,YAAY,CAAA,GACjBD,KAAKE,OAAAA,OACLF,KAAKG,UAAAA,OACLH,KAAKI,SAAS,CAAA,GACdJ,KAAKb,SAASA,IACda,KAAKZ,qBAAqBA,IAC1BY,KAAKX,UAAUA,IACfW,KAAKV,SAASA,IACdU,KAAKT,KAAKA,MAjDC,wBAkDXS,KAAKR,WAAWA,IAChBQ,KAAKP,YAAYA,IACjBO,KAAKN,SAASA,IACdM,KAAKL,QAAQA,IACbK,KAAKJ,SAASA,IACdI,KAAKH,UAAUA,IACfG,KAAKF,MAAMA,IACXE,KAAKD,UAAUA,IACXb,GAAOmB,UAAU;AACjB,UAAA,CAAKxC,EAAQmC,KAAKM,SAASpB,GAAOmB,SAASC,OAAAA;AACvC,cAAM,IAAIC,MAAM,2DAA2DC,KAAKC,UAAUT,KAAKM,OAAAA,CAAAA,QAAgBE,KAAKC,UAAUvB,GAAOmB,SAASC,OAAAA,CAAAA,EAAAA;AAElJ,aAAOpB,GAAOmB;IACjB;AACDnB,OAAOmB,WAAWL;EACrB;EACGM,IAAAA,UAAAA;AACA,WAAO,EACHP,SAASC,KAAKD,SACdZ,QAAQa,KAAKb,QACbE,SAASW,KAAKX,SACdC,QAAQU,KAAKV,QACbC,IAAIS,KAAKT,IACTE,WAAWO,KAAKP,WAChBD,UAAUQ,KAAKR,UACfI,QAAQI,KAAKJ,QACbF,QAAQM,KAAKN,QACbC,OAAOK,KAAKL,OACZG,KAAKE,KAAKF,KACVV,oBAAoBY,KAAKZ,mBAAAA;EAEhC;EACGsB,IAAAA,SAAAA;AACA,WAAIV,KAAKI,OAAOjC,SACLP,EAAa+C,UAEpBX,KAAKE,OACEtC,EAAagD,UAEpBZ,KAAKG,UACEvC,EAAaiD,UAEjBjD,EAAakD;EACvB;EACGC,IAAAA,SAAAA;AACA,WAAOf,KAAKE,QAAAA,CAASF,KAAKG,WAAWH,KAAKI,OAAOjC,UAAU6B,KAAKH,UAAU;EAC7E;EAODmB,YAAAA;AACI,QAAIlB,KAAME,KAAKF;AA6Bf,WA5BAA,MAAO,gDACHE,KAAKb,WACLW,MAAO,QAAQE,KAAKb,MAAAA,KAEpBa,KAAKX,YACLS,MAAO,YAAYE,KAAKX,OAAAA,KAExBW,KAAKV,WACLQ,MAAO,WAAWE,KAAKV,MAAAA,KAEvBU,KAAKP,UAAUtB,SAAS,MACxB2B,MAAO,cAAcE,KAAKP,UAAUwB,KAAK,GAAA,CAAA,KAEzCjB,KAAKR,aACLM,MAAO,aAAaE,KAAKR,QAAAA,KAEzBQ,KAAKJ,WACLE,MAAO,WAAWE,KAAKJ,MAAAA,KAEvBI,KAAKD,YACLD,MAAO,MAAME,KAAKD,OAAAA,KAElBC,KAAKN,WACLI,MAAO,YAAYE,KAAKN,OAAOuB,KAAK,GAAA,CAAA,KAEpCjB,KAAKZ,uBACLU,MAAO,yBAAyBE,KAAKZ,kBAAAA,KAElCU;EACV;EACDoB,eAAAA;AACI,UAAMC,KAASC,SAASC,eAAerB,KAAKT,EAAAA;AACxC4B,IAAAA,MACAA,GAAOG,OAAAA;EAEd;EAKDC,OAAAA;AACI,WAAOvB,KAAKwB,YAAAA;EACf;EAODA,cAAAA;AACI,WAAO,IAAIC,QAAQ,CAACC,IAASC,OAAAA;AACzB3B,WAAK4B,aAAcC,CAAAA,OAAAA;AACVA,QAAAA,KAIDF,GAAOE,GAAIC,KAAAA,IAHXJ,GAAQK,OAAOC,MAAAA;MAIlB,CAAA;IACH,CAAA;EAET;EACDC,cAAcC,IAAAA;AAEV,WADAlC,KAAKmC,QAAAA,GACEH,OAAOI,KAAKH,cAAcC,EAAAA;EACpC;EAKDN,aAAaS,IAAAA;AACTrC,SAAKC,UAAUqC,KAAKD,EAAAA,GACpBrC,KAAKmC,QAAAA;EACR;EAIDI,YAAAA;AACI,QAAIC,IAAIC;AACR,QAAIrB,SAASC,eAAerB,KAAKT,EAAAA;AAG7B,aAAA,KADAS,KAAK0C,SAAAA;AAGT,UAAMC,KAAS,EACX1D,KAAKe,KAAKb,QACVE,SAASW,KAAKX,SACdC,QAAQU,KAAKV,QACbG,WAAWO,KAAKP,UAAUtB,UAAU6B,KAAKP,WACzCmD,GAAG5C,KAAKD,SACRL,QAAQM,KAAKN,QACbF,UAAUQ,KAAKR,UACfI,QAAQI,KAAKJ,QACbR,oBAAoBY,KAAKZ,mBAAAA;AAG7BR,WAAOP,KAAKsE,EAAAA,EAAQE,QAEnB5D,CAAAA,OAAAA,CAAS0D,GAAO1D,EAAAA,KAAAA,OAAe0D,GAAO1D,EAAAA,CAAAA,IAC4F,UAA5HwD,KAA8E,UAAxED,KAAgB,SAAXT,UAAAA,WAAmBA,SAAAA,SAA6BA,OAAOC,WAAAA,WAAoBQ,KAAAA,SAAyBA,GAAGJ,SAAAA,WAAkBK,KAAAA,SAAyBA,GAAGR,mBAIjKa,CAAAA,OAAAA;AAEE,UAAIC,IAAG/E,IAAGgF,IAAGC,KAAI,kCAAkCC,KAAI,UAAUC,KAAI,iBAAiBC,KAAI,UAAUC,KAAIjC,UAAUnD,KAAI8D;AAEtH9D,MAAAA,KAAIA,GAAEiF,EAAAA,MAAOjF,GAAEiF,EAAAA,IAAK,CAAA;AAEpB,YAAMI,KAAIrF,GAAEmE,SAASnE,GAAEmE,OAAO,CAAE,IAAGmB,KAAI,oBAAIC,OAAOC,KAAI,IAAIC,mBAAmBC,KAAI,MAEjFZ,OAAMA,KAAI,IAAItB,QAAQ,CAACmC,IAAGC,OAAAA;AAAMC,eAxS7BC,KAwSuC/D,MAxSfgE,KAwSqC,aAAA;AAC5D,cAAIxB;AAKJ,eAAKQ,MAAAA,MAJEhF,KAAIqF,GAAEY,cAAc,QAAA,GAC3BjG,GAAEuB,KAAKS,KAAKT,IACZkE,GAAES,IAAI,aAAa,CAAA,GAAIX,EAAAA,IAAK,EAAA,GAElBT;AACNW,YAAAA,GAAES,IAAIlB,GAAEmB,QAAQ,UAAWC,CAAAA,OAAM,MAAMA,GAAE,CAAA,EAAGC,YAAAA,CAAAA,GAAgBvB,GAAEE,EAAAA,CAAAA;AAClES,UAAAA,GAAES,IAAI,YAAYhB,KAAI,WAAWE,EAAAA,GACjCpF,GAAEsG,MAAMtE,KAAKF,MAAM,MAAM2D,IACzBH,GAAEF,EAAAA,IAAKQ,IACP5F,GAAEuG,UAAU,MAAOxB,KAAIc,GAAEtD,MAAM0C,KAAI,kBAAA,CAAA,GAEnCjF,GAAE2B,QAAQK,KAAKL,UAAsD,UAA3C6C,KAAKa,GAAEmB,cAAc,eAAA,MAAA,WAA8BhC,KAAAA,SAAyBA,GAAG7C,UAAU,IACnH0D,GAAEoB,KAAKC,OAAO1G,EAAAA;QACjB,GArTN,MAF6B2G,KAAAA,YAElBA,KAAIlD,UAAU,SAAUC,IAASC,IAAAA;AAC/C,mBAASiD,GAAUC,IAAAA;AAAS,gBAAA;AAAMC,cAAAA,GAAKd,GAAUe,KAAKF,EAAAA,CAAAA;YAAAA,SAAkBpB,IAAAA;AAAK9B,cAAAA,GAAO8B,EAAAA;YAAAA;UAAO;AAC3F,mBAASuB,GAASH,IAAAA;AAAS,gBAAA;AAAMC,cAAAA,GAAKd,GAAiB,MAAEa,EAAAA,CAAAA;YAAAA,SAAkBpB,IAAAA;AAAK9B,cAAAA,GAAO8B,EAAAA;YAAAA;UAAO;AAC9F,mBAASqB,GAAKG,IAAAA;AAJlB,gBAAeJ;AAIaI,YAAAA,GAAO/E,OAAOwB,GAAQuD,GAAOJ,KAAAA,KAJ1CA,KAIyDI,GAAOJ,OAJhDA,cAAiBF,KAAIE,KAAQ,IAAIF,GAAE,SAAUjD,IAAAA;AAAWA,cAAAA,GAAQmD,EAAAA;YAAO,CAAA,GAIhBK,KAAKN,IAAWI,EAAAA;UAAY;AAC9GF,UAAAA,IAAMd,KAAYA,GAAUmB,MAAMpB,IAAuB,CAAA,CAAA,GAAKgB,KAAAA,CAAAA;QACtE,CAAA;AAPA,YAAmBhB,IAAqBY,IAAGX;MAuTzB,CAAA;AAEFV,MAAAA,GAAEH,EAAAA,IAAKiC,QAAQC,KAAKpC,KAAI,+BAA+BH,EAAAA,IAAMQ,GAAEH,EAAAA,IAAK,CAACS,OAAMC,OAAMN,GAAE+B,IAAI1B,EAAAA,KAAMD,GAAAA,EAAIuB,KAAK,MAAM5B,GAAEH,EAAAA,EAAGS,IAAAA,GAAMC,EAAAA,CAAAA;IAC1H,GAAElB,EAAAA;AAMP,UAAM4C,KAAkBvF,KAAKP,UAAU+F,IAAKC,CAAAA,OAAYzF,KAAKiC,cAAcwD,EAAAA,CAAAA;AAEtEF,IAAAA,GAAgBpH,UACjBoH,GAAgBjD,KAAKtC,KAAKiC,cAAc,MAAA,CAAA,GAE5CR,QAAQiE,IAAIH,EAAAA,EAAiBL,KAAK,MAAMlF,KAAK0C,SAAAA,GAAaZ,CAAAA,OAAAA;AACtD,YAAM6D,KAAQ,IAAIC,WAAW,SAAS,EAAE9D,OAAAA,GAAAA,CAAAA;AACxC9B,WAAK6F,kBAAkBF,EAAAA;IAAM,CAAA;EAEpC;EAIDG,QAAAA;AACI9F,SAAKkB,aAAAA,GACLlB,KAAKE,OAAAA,OACLF,KAAKG,UAAAA,OACLH,KAAKI,SAAS,CAAA,GACdJ,KAAK+F,eAAe;EACvB;EACDC,wBAAAA;AACQhG,SAAKe,UACLf,KAAK8F,MAAAA;EAEZ;EACDD,kBAAkBpC,IAAAA;AAEd,QADAzD,KAAKI,OAAOkC,KAAKmB,EAAAA,GACbzD,KAAKI,OAAOjC,UAAU6B,KAAKH,SAAS;AACpC,YAAMoG,KAAQjG,KAAKI,OAAOjC,SAAS+H,KAAKC,IAAI,GAAGnG,KAAKI,OAAOjC,MAAAA;AAC3DiH,cAAQtD,MAAM,kDAAkDmE,EAAAA,MAAAA,GAChEG,WAAW,MAAA;AACPpG,aAAKkB,aAAAA,GACLlB,KAAKuC,UAAAA;MAAW,GACjB0D,EAAAA;IACN;AAEGjG,WAAK+F,eAAetC,IACpBzD,KAAK0C,SAAAA;EAEZ;EACDA,WAAAA;AACI1C,SAAKE,OAAAA,MACLF,KAAKG,UAAAA,OACLH,KAAKC,UAAU4C,QAASwD,CAAAA,OAAAA;AACpBA,MAAAA,GAAGrG,KAAK+F,YAAAA;IAAa,CAAA,GAEzB/F,KAAKC,YAAY,CAAA;EACpB;EACDkC,UAAAA;AAEI,QADAnC,KAAKgG,sBAAAA,GACDhG,KAAKE;AACLF,WAAK0C,SAAAA;SAEJ;AAED,UAAIX,OAAOC,UAAUD,OAAOC,OAAOI,QAAQL,OAAOC,OAAOI,KAAKrC;AAI1D,eAHAqF,QAAQC,KAAK,sJAAA,GAAA,KAEbrF,KAAK0C,SAAAA;AAGL1C,WAAKG,YAELH,KAAKG,UAAAA,MACLH,KAAKuC,UAAAA;IAEZ;EACJ;AAAA;AC5XgB+D,IAAAA,IAOnB,SAAAC,IAAAA;AAAA,WAAAD,GAAYhG,IAAAA;AAA8B,QAAAkG;AAAA,YACxCA,KAAMlG,GAAAA,KAAAA,MAAAA,EAAAA,KADkCN,MAH1CyG,SAA+C,MAC/CC,GAAAA,WAAwC,MAKhB,eAAA,OAAlB3E,WACFyE,GAAKC,SAAS,IAAAvH,EAAWoB,EAAAA,EAASiB,KAAAA,EAAO2D,KAAK,SAAClD,IAAAA;AAC7C,UAAM0E,KAAW,IAAU1E,GAACI,KAAKuE;AAEjC,aADAH,GAAKE,WAAWA,IAEjBA;IAAA,CAAA,IARqCF;EAUzC;AAVDI,IAAAN,IAAAC,EAAAA;AAAAA,MAAAA,KAAAA,GAAAA;AAP0CM,SAAAA,GAmB1CC,WAAA,SAAoCC,IAAAA;AAClC,UAAUxG,IAAAA,MAAM,yBAAA;EACjB,GAAAsD,GAEDmD,QAAA,SACEC,IAAAA;AAEA,WAAeA,GAACC,KAAKC,QAAQ3B,IAAI,SAACjC,IAAAA;AAChC,UAAqBA,KAAAA,GAAE6D,SAASC,SAASC,OAAAA,GAAjCC,KAAAA,GAAAA,KAAKC,KAAbC,GAAaD,KACbE,KAAqCnE,GAAE6D,SAASO,SAASL,OAAAA;AAEzD,aAAO,EACLM,GAAGJ,IACHK,GAAGN,IACHO,OAAOvE,GAAEwE,mBACTC,QAAQ,CACN,CAPJN,GAAqBO,OAArBP,GAA4BQ,IAAAA,GAQxB,CARUC,GAAAA,OAAdT,GAAQU,IAAAA,CAAAA,GAUNC,KAAK9E,GAAAA;IAER,CAAA;EACF,GAAAM,GAEKyE,SAAAA,SACJhI,IAAAA;AAAAA,QAAAA;AAEMoG,UAAAA,KAAAA,SAAAA,IAAAA;AAEN,YAAA,CAAKA;AACH,gBAAUnG,IAAAA,MACR,4EAAA;AANmB,eAAAkB,QAAAC,QAUAgF,GACpB6B,QAAQ,EAAEC,SAASlI,GAAQmI,MAAAA,GAAS,SAACxB,IAAAA;AAAAA,iBAAc,EAClDE,SAASF,GAAAA;QAD0B,CAAA,EAG9B,MAAA,SAACxD,IAAAA;AAIN,iBAHe,mBAAXA,GAAEiF,QACJtD,QAAQtD,MAAS2B,GAAEiF,OAAnB,OAA4BjF,GAAEkF,OAAAA,GAEzB,EAAExB,SAAS,CAAA,EAAA;QACnB,CAAA,CAAA,EAnBoBjC,KAAA,SAUjB+B,IAAAA;AAWN,iBAAYD,GAAAA,MAAM,EAAEE,MAAMD,GAAAA,CAAAA;QArBH,CAAA;MAEN,GAAA2B,KAAA5I,MAAAA,KAAA4I,GAAKlC;AAAmB,aAAAjF,QAAAC,QAAAmH,KAAAC,GAAAD,EAAAA,IAAApH,QAAAC,QAAAkH,GAAKnC,MAAAA,EAoB/CvB,KAAA4D,EAAAA,CAAAA;IAlEyCjC,SAAAA,IAAAA;AAAAA,aAAAA,QAAAA,OAAAA,EAAAA;IAAAA;EAAAA,GAAAA;AAAAA,EAAAA,CAAAA;AAAvBP,IAAuBO,IAAAA,SAAAA,IAAAA;AAAAA,WAAAA,KAAAA;AAAAA,aAAAA,IAAAA,KAAAA,UAAAA,QAAAA,KAAAA,IAAAA,MAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAAAA,IAAAA;AAAAA,MAAAA,GAAAA,EAAAA,IAAAA,UAAAA,EAAAA;ACiB1CC,YAAAA,KAAAA,GAAAA,KAAAA,MAAAA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,CAAAA,KAAAA,MAFAiC,YAAY,qDAEZjC;EAAAA;AAAAA,IAAAA,IAAAA,EAAAA;AAAAA,MAAAA,KAAAA,GAAAA;AANgDD,SAMhDC,GAAAA,WAAA,SAAAC,IAAAA;AAAAA,QAAoC0B,KAAA1B,GAAzB0B;AAET,WAAYO,KAAAA,OAAOhJ,KAAK+I,WADQ,YAAA,OAAAtF,KAAW,EAAE+E,SAASC,GAAAA,IAAUA,EAAAA;EAEjE,GAEDzB,GAAAA,QAAA,SAAM/B,IAAAA;AACJ,WAAaA,GAACiC,KAAKC,QAAQ3B,IAAI,SAACjC,IAAAA;AAAD,aAAQ,EACrCqE,GAAGrE,GAAE6D,SAASC,SAASG,KACvBK,GAAGtE,GAAE6D,SAASC,SAASE,KACvBO,OAAOvE,GAAEwE,mBACTC,QAAQ,CACN,CAACzE,GAAE6D,SAASO,SAASsB,UAAU1B,KAAKhE,GAAE6D,SAASO,SAASsB,UAAUzB,GAAAA,GAClE,CAACjE,GAAE6D,SAASO,SAASuB,UAAU3B,KAAKhE,GAAE6D,SAASO,SAASuB,UAAU1B,GAAAA,CAAAA,GAEpEa,KAAK9E,GAAAA;IARwB,CAAA;EAUhC,GAtB+CsD;AAAAA,EAAAA,CAAAA;ADX7BP,ICW6BO,ICQhDkC,SAAAA,IAAAA;AAAAA,WAAAA,KAAAA;AAAAA,aAAAA,IAAAA,KAAAA,UAAAA,QAAAA,KAAAA,IAAAA,MAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAAAA,IAAAA;AAAAA,MAAAA,GAAAA,EAAAA,IAAAA,UAAAA,EAAAA;AAEAjC,YAFAiC,KAAAA,GAAAA,KAAAA,MAAAA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,CAAAA,KAAAA,MAAAA,YAAY,qDAEZjC;EAAAA;AAFAiC,IAAAA,IAAAA,EAAAA;AAEAjC,MAAAA,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,WAAA,SAAoCC,IAAAA;AAAA,QAAA0B,KAAA1B,GAAzB0B;AAET,WAAYO,KAAAA,OAAOhJ,KAAK+I,WADQ,YAAA,OAAjBN,KAA4B,EAAErF,GAAGqF,GAAAA,IAAUA,EAAAA;EAE3D,GAEDzB,GAAAA,QAAA,SAAMC,IAAAA;AACJ,WAAeA,GAACC,KAAKiC,MAClBC,OAAO,SAAC7F,IAAAA;AAAD,aAAA,WAAQA,GAAC8F;IAAT,CAAA,EACP7D,IAAI,SAACjC,IAAAA;AAAO,aAAA,EACXqE,GAAGrE,GAAE8F,SAAS7B,KACdK,GAAGtE,GAAE8F,SAAS9B,KACdO,OAAOvE,GAAEiF,QAAQV,OACjBE,QAAQ,MACRK,KAAK9E,GAAAA;IALF,CAAA;EAOR,GAAAE;AAAA,EArBuCoD,CAAAA;AFfrBP,IEeqBO,IAAAA,SAAAA,IAAAA;ACDxC,WAAYvG,GAAAA,IAAAA;AAA0C,QAAAkG;AAAAA,eAA1ClG,OAAAA,KAAwC,CAAE,KACpDkG,KAAAD,GAAAvH,KAAAgB,MAAMM,EAAAA,KAANN,MAJF+I,YAAAA,QACAO,GAAAA,aAAAA;AAKE,QAAAzF,KAAa;AAHuC,WAIpD2C,GAAKuC,YAAYzI,GAAQyI,aAAgBQ,KAAxB,WACjB/C,GAAK8C,aAAahJ,GAAQgJ,cAAiBC,KAA3C,YACD/C;EAAA;AAAA,IAAA/C,IAAAW,EAAA;AAAA,MAED0C,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,WAAA,SAAAC,IAAAA;AAAAA,QAA0C0B,KAAA1B,GAA/B0B,OAAOe,KAAwBzC,GAAxByC,MACV7G,KAA0B,YAAA,OAAjB8F,KAA4B,EAAErF,GAAGqF,GAAAA,IAAUA;AAG1D,WAFA9F,GAAO8G,SAAS,QAILzJ,KAAKgJ,OAFRQ,OACUE,EAACC,UACI3J,KAAKsJ,aAGLtJ,KAAK+I,WAHYpG,EAAAA;EAKzC,GAEDqE,GAAAA,QAAA,SAAMC,IAAAA;AAKJ,YAJgB3I,MAAMC,QAAQ0I,GAASC,IAAAA,IACnCD,GAASC,OACT,CAACD,GAASC,IAAAA,GAEC1B,IAAI,SAACjC,IAAAA;AAAD,aAAQ,EACzBqE,GAAGgC,OAAOrG,GAAEsG,GAAAA,GACZhC,GAAG+B,OAAOrG,GAAEgE,GAAAA,GACZO,OAAOvE,GAAEuG,cACT9B,QAAQ,CACN,CAAC+B,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,GAAKD,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,CAAA,GACxD,CAACD,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,GAAKD,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,CAAA,CAAA,GAE1D3B,KAAK9E,GAAAA;IARY,CAAA;EAUpB,GAAAE;AAAA,EA3CgDoD,CAAAA;AHP9BP,IGO8BO,IAAAA,SAAAA,IAAAA;ACnBjD,WAAYvG,GAAAA,IAAAA;AAAqC,WAAA8D,GAAA,KAAA,MAAA,EAAA,CAAA,GAE1C9D,IADL,EAEEyI,WAFF,wCAGEO,YAHF,wCAAA,CAAA,CAAA,KAKDtJ;EAAA;AAAA,SAAA,EAAA6D,IAAAO,EAAA,GAED4C,GAAAA,UAAAA,QAAA,SACEC,IAAAA;AAEA,WAAIA,GAASC,KAAKpF,QACT,CAAA,IAEIkF,GAAAA,UAAAA,MAAMC,KAAAA,MAAAA,EAAAA;EACpB,GAAApD;AAAA,EAhB6CoG,CAAAA;AJa3B3D,IIb2B2D,IC2E9ClB,SAAAA,IAAAA;AAAAA,WAAAA,KAAAA;AAAAA,aAAAA,IAAAA,KAAAA,UAAAA,QAAAA,KAAAA,IAAAA,MAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KAAAA,IAAAA;AAAAA,MAAAA,GAAAA,EAAAA,IAAAA,UAAAA,EAAAA;AAAAA,YAAAA,KAAAA,GAAAA,KAAAA,MAAAA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,CAAAA,KAAAA,MAAAA,YAAY,gDAAAtF;EAAA;AAAZsF,IAAAA,IAAAA,EAAAA;AAAAA,MAAAA,KAAAA,GAAAA;AAJ4ClC,SAAAA,GAM5CC,WAAA,SAAA1C,IAAA;AAAWqE,QAAAA,KAAAA,GAAAA,OACH9F,KAA0B,YAAA,OAAV8F,KAAqB,EAAErF,GAAGqF,GAAAA,IAAUA;AAG1D,WAFA9F,GAAO8G,SAAS,QAETzJ,KAAKgJ,OAAOhJ,KAAK+I,WAAWpG,EAAAA;EACpC,GAEDqE,GAAAA,QAAA,SAAMC,IAAAA;AACJ,WAAA7C,GAAgB8C,KAAKC,QAAQ3B,IAAI,SAACjC,IAAAA;AAAD,aAAQ,EACvCqE,GAAGrE,GAAE6D,SAASI,KACdK,GAAGtE,GAAE6D,SAASG,KACdO,OAAOvE,GAAE2G,WACTlC,QAAQ,CACN,CAACzE,GAAEyE,OAAOiB,UAAU1B,KAAKhE,GAAEyE,OAAOiB,UAAUzB,GAAAA,GAC5C,CAACjE,GAAEyE,OAAOkB,UAAU3B,KAAKhE,GAAEyE,OAAOkB,UAAU1B,GAAAA,CAAAA,GAE9Ca,KAAK9E,GAAAA;IAR0B,CAAA;EAUlC,GAAAM,GAEKyE,SAAAA,SAAOhI,IAAAA;AAAuB,QAAA;AAElC,aACEmB,QAAAC,QADEpB,GAAQmI,MAAMtK,SAAS,IAClB,CAAA,IAGImK,GAAAA,UAAAA,OAAAA,KANqBtI,MAMdM,EAAAA,CAAAA;IAhCsBuG,SAAAA,IAAAA;AAAAA,aAAAA,QAAAA,OAAAA,EAAAA;IAAAA;EAAAA,GAAAA;AAAAA,EAAAA,CAAAA;AL1DzBP,IK0DyBO,IAAAA,SAAAA,IAAAA;AC5C5C,WAAYvG,GAAAA,IAAAA;AAA0C,QAAAkG;AAAAA,eAA1ClG,OAAAA,KAAwC,CAAE,KACpDkG,KAAAD,GAAAvH,KAAAgB,MAAMM,EAAAA,KAANN,MAJF+I,YAAAA,QACAO,GAAAA,aAAAA;AAKE,QAAAzF,KAAa;AAHuC,WAIpD2C,GAAKuC,YAAYzI,GAAQyI,aAAgBQ,KAAxB,WACjB/C,GAAK8C,aAAahJ,GAAQgJ,cAAiBC,KAA3C,YACD/C;EAAA;AAAA,IAAA/C,IAAAW,EAAA;AAAA,MAED0C,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,WAAA,SAAAC,IAAAA;AAAAA,QAA0C0B,KAAA1B,GAA/B0B,OAAOe,KAAwBzC,GAAxByC,MACV7G,KAA0B,YAAA,OAAjB8F,KAA4B,EAAErF,GAAGqF,GAAAA,IAAUA;AAG1D,WAFA9F,GAAO8G,SAAS,QAILzJ,KAAKgJ,OAFRQ,OACUE,EAACC,UACI3J,KAAKsJ,aAGLtJ,KAAK+I,WAHYpG,EAAAA;EAKzC,GAEDqE,GAAAA,QAAA,SAAMC,IAAAA;AAKJ,YAJgB3I,MAAMC,QAAQ0I,GAASC,IAAAA,IACnCD,GAASC,OACT,CAACD,GAASC,IAAAA,GAEC1B,IAAI,SAACjC,IAAAA;AAAD,aAAQ,EACzBqE,GAAGgC,OAAOrG,GAAEsG,GAAAA,GACZhC,GAAG+B,OAAOrG,GAAEgE,GAAAA,GACZO,OAAOvE,GAAEuG,cACT9B,QAAQ,CACN,CAAC+B,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,GAAKD,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,CAAA,GACxD,CAACD,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,GAAKD,WAAWxG,GAAEyG,YAAY,CAAA,CAAA,CAAA,CAAA,GAE1D3B,KAAK9E,GAAAA;IARY,CAAA;EAUpB,GAAAE;AAAA,EA3CkDoD,CAAAA;ANPhCP,IMOgCO,IAAAA,SAAAA,IAAAA;ACFnD,WAAYvG,GAAAA,IAAAA;AAAmC,QAAAkG;AAAA,WAAA,WAAnClG,OAAAA,KAAiC,CAAA,KAC3CkG,KAAAA,GAAAA,KAAAA,MAAMlG,EAAAA,KAANN,MAHF+I,YAAAA,QAMEvC,GAAKuC,YAAYzI,GAAQyI,aAAgBQ,wDAC1C/C;EAAA;AAAA,IAAA/C,IAAAW,EAAA;AAAA,MAED0C,KAAAA,GAAAA;AAAAA,SAAAA,GAAAA,WAAA,SAAAC,IAAAA;AACE,WAAO/G,KAAKgJ,OAAU,KAAAhJ,KAAK+I,YADOhC,GAAzB0B,QAAAA,OAAAA;EAEV,GAAA5E,GAEDmD,QAAA,SAAMC,IAAAA;AAKJ,YAJgB3I,MAAMC,QAAQ0I,GAASC,KAAKiD,QAAAA,IACxClD,GAASC,KAAKiD,WACd,CAAA,GAEW3E,IAAI,SAACjC,IAAAA;AAClB,UAAAE,KAAa;AAQb,aAPIF,GAAE6G,SACJpC,KAAS,CACP,CAAC+B,WAAWxG,GAAE6G,KAAK,CAAA,CAAA,GAAKL,WAAWxG,GAAE6G,KAAK,CAAA,CAAA,CAAA,GAC1C,CAACL,WAAWxG,GAAE6G,KAAK,CAAA,CAAA,GAAKL,WAAWxG,GAAE6G,KAAK,CAAA,CAAA,CAAA,CAAA,IAIvC,EACLxC,GAAGgC,OAAOrG,GAAE8G,OAAO,CAAA,CAAA,GACnBxC,GAAG+B,OAAOrG,GAAE8G,OAAO,CAAA,CAAA,GACnBvC,OAAOvE,GAAE+G,aAAa/G,GAAE+G,aAAa/G,GAAEgH,MACvCvC,QAAAA,IACAK,KAAK9E,GAAAA;IAER,CAAA;EACF,GAAAE;AAAA,EAvCyCoD,CAAAA;APCvBP,IODuBO,IAAAA,SAAAA,IAAAA;AC+B1C,WAAYvG,GAAAA,IAAAA;AAAAA,QAAAA;AAAAA,eAAAA,OAAAA,KAAmC,CAAA,KAC7CkG,KAAAD,GAAAvH,KAAAgB,MAAMM,EAAAA,KAANN,MAJF+I,YAAAA,QAGiDvC,GAFjD8C,aAAAA;AAKE,QAAAzF,KAAa;AAHkC,WAI/C2C,GAAKuC,YAAYzI,GAAQyI,aAAgBQ,KAAAA,WACzC/C,GAAK8C,aAAahJ,GAAQgJ,cAAiBC,KAAzB,YACnB/C;EAAA;AAAA,IAAA/C,IAAAW,EAAA;AAAA,MAAAP,KAAAJ,GAAA;AAb2CoD,SAAAA,GAe5CC,WAAA,SAAA1C,IAAA;AAAWqE,QAAAA,KAAAA,GAAAA;AAGT,WAEgBO,KAAAA,OALAQ,GAAAA,SAIEE,EAACC,UACI3J,KAAKsJ,aAGLtJ,KAAK+I,WAPI,YAAA,OAAAtF,KAAW,EAAEL,GAAGqF,GAAAA,IAAUA,EAAAA;EAS3D,GAEDzB,GAAAA,QAAA,SAAM/B,IAAAA;AACJ,WAAAb,GAAc8C,KAAKiD,SAAS3E,IAAI,SAACjC,IAAAA;AAAO,aAAA,EACtCqE,GAAGrE,GAAE6D,SAASoD,YAAY,CAAA,GAC1B3C,GAAGtE,GAAE6D,SAASoD,YAAY,CAAA,GAC1B1C,OAAOvE,GAAEkH,WAAW3C,OACpBE,QAAQ,MACRK,KAAK9E,GAAAA;IALyB,CAAA;EAOjC,GAnC2CsD;AAAAA,EAAAA,CAAAA;ARvBzBP,IQuByBO,IAAAA,SAAAA,IAAAA;ACW5C,WAAYvG,GAAAA,IAAAA;AAAqC,QAAAkG;AAAAA,eAArClG,OAAAA,KAAmC,CAAA,KAC7CkG,KAAAD,GAAAvH,KAAAgB,MAAMM,EAAAA,KAANN,MAJF+I,YAAAA,QACAO,GAAAA,aAAAA;AAKE,QAAAzF,KAAa;AAHkC,WAI/C2C,GAAKuC,YAAYzI,GAAQyI,aAAgBQ,KAAxB,WACjB/C,GAAK8C,aAAahJ,GAAQgJ,cAAiBC,KAAzB,YAL6B/C;EAMhD;AAAA,IAAA/C,IAAAW,EAAA;AAAA,MAAAP,KAAAJ,GAAA;AAAA,SAAAI,GAEDiD,WAAA,SAA0CC,IAAAA;AAAA,QAAAtD,KAA/BgF,GAAAA,OAAOe,KAAAA,GAAAA,MACJ7G,KAAoB,YAAA,OAAV8F,KAAqB,EAAE8B,MAAM9B,GAAAA,IAAUA;AAG7D,WAFA9F,GAAO8G,SAAS,QAIAT,KAAAA,OAFRQ,OACDE,EAAYC,UACI3J,KAAKsJ,aAGLtJ,KAAK+I,WAHYpG,EAAAA;EAKzC,GAAAkB,GAEDmD,QAAA,SAAMC,IAAAA;AAIJ,YAHgB3I,MAAMC,QAAQ0I,GAASC,KAAKC,OAAAA,IACxCF,GAASC,KAAKC,UACd,CAACF,GAASC,KAAKC,OAAAA,GACJ3B,IAAI,SAACjC,IAAAA;AAAO,aAAA,EACzBqE,GAAGgC,OAAOrG,GAAEsG,GAAAA,GACZhC,GAAG+B,OAAOrG,GAAEgE,GAAAA,GACZO,OAAOvE,GAAE2G,WACTlC,QAAQ,CACN,CAAC+B,WAAWxG,GAAE6G,KAAKM,IAAAA,GAAOX,WAAWxG,GAAE6G,KAAKO,IAAAA,CAAAA,GAC5C,CAACZ,WAAWxG,GAAE6G,KAAKQ,IAAAA,GAAOb,WAAWxG,GAAE6G,KAAKS,IAAAA,CAAAA,CAAAA,GAE9CxC,KAAK9E,GAAAA;IARY,CAAA;EAUpB,GAAAE;AAAA,EA1C2CoD,CAAAA;",
  "names": ["element", "className", "parent", "attributes", "o", "document", "createElement", "el", "Object", "keys", "forEach", "key", "n", "type", "indexOf", "substr", "toLowerCase", "addEventListener", "innerHTML", "innerText", "setAttribute", "appendChild", "stopPropagation", "event", "preventDefault", "filter", "Boolean", "join", "trim", "classList", "Array", "isArray", "name", "contains", "add", "removeClassName", "remove", "ARROW_DOWN_KEY", "ARROW_UP_KEY", "SPECIAL_KEYS", "ENTER_KEY", "SearchElement", "_ref", "_this", "this", "handleSubmit", "searchLabel", "_ref$classNames", "classNames", "container", "form", "input", "hasError", "cx", "autocomplete", "onClick", "onDblClick", "touchStart", "touchEnd", "placeholder", "onInput", "onKeyUp", "e", "onKeyPress", "onFocus", "onBlur", "focus", "dispatchEvent", "t", "addClassName", "onSubmit", "_this3", "query", "value", "keyCode", "body", "blur", "setQuery", "ResultList", "handleClick", "notFoundMessage", "selected", "results", "resultItem", "target", "hasAttribute", "Number", "getAttribute", "result", "idx", "notfound", "html", "resultlist", "item", "render", "resultFormat", "_this2", "clear", "child", "cloneNode", "length", "parentElement", "select", "index", "from", "children", "count", "lastChild", "removeChild", "defaultOptions", "position", "style", "showMarker", "showPopup", "popupFormat", "label", "_ref2", "marker", "icon", "L", "Icon", "Default", "draggable", "maxMarkers", "maxSuggestions", "retainZoomLevel", "animateZoom", "clearSearchLabel", "messageHideDelay", "zoomLevel", "button", "resetButton", "msgbox", "autoComplete", "autoCompleteDelay", "autoClose", "keepResult", "updateMap", "UNINITIALIZED_ERR", "options", "initialize", "cb", "wait", "immediate", "timeout", "provider", "Error", "_extends", "markers", "FeatureGroup", "searchElement", "title", "href", "DomEvent", "disableClickPropagation", "text", "close", "clearResults", "resultList", "data", "autoSearch", "args", "slice", "call", "arguments", "clearTimeout", "setTimeout", "apply", "selectResult", "onAdd", "map", "_this$options", "addTo", "i", "getContainer", "querySelector", "root", "onRemove", "_this$container", "open", "_this$searchElement", "max", "next", "_item", "force", "_this$options2", "clearLayers", "Promise", "resolve", "_temp2", "search", "then", "_this5", "showResult", "_this$options3", "getLayers", "removeLayer", "s", "addMarker", "centerMap", "fireEvent", "location", "closeResults", "_this$options4", "Marker", "y", "x", "popupLabel", "bindPopup", "addLayer", "openPopup", "on", "_this6", "getLatLng", "l", "_this$options5", "resultBounds", "bounds", "LatLngBounds", "LatLng", "toBounds", "isValid", "getBounds", "setView", "getCenter", "getZoom", "animate", "fitBounds", "_this$options6", "SearchControl", "LControl", "Control", "extend", "RequestType", "AbstractProvider", "r", "getParamString", "params", "set", "encodeURIComponent", "getUrl", "url", "endpoint", "SEARCH", "fetch", "request", "json", "parse", "findBestMatchLevelIndex", "vms", "find", "vm", "matchLevel", "match", "getLabel", "_result$locale_names", "_result$city", "_result$postcode", "_result$country", "locale_names", "_highlightResult", "city", "administrative", "postcode", "country", "response", "hits", "_geoloc", "lng", "lat", "raw", "method", "JSON", "stringify", "searchUrl", "q", "jsonp", "resourceSets", "resources", "point", "coordinates", "address", "formattedAddress", "bbox", "script", "Date", "now", "createScriptElement", "window", "EsriProvider", "f", "locations", "feature", "geometry", "extent", "ymin", "xmin", "ymax", "xmax", "PeliasProvider", "_AbstractProvider", "host", "_inheritsLoose", "REVERSE", "reverseParams", "features", "res", "properties", "_PeliasProvider", "getDefaultExportFromCjs", "__esModule", "prototype", "hasOwnProperty", "LoaderStatus", "isEqual", "getDefaultExportFromCjs", "equal", "a", "b", "constructor", "length", "i", "keys", "Array", "isArray", "RegExp", "source", "flags", "valueOf", "Object", "prototype", "toString", "hasOwnProperty", "call", "key", "Loader", "apiKey", "authReferrerPolicy", "channel", "client", "id", "language", "libraries", "mapIds", "nonce", "region", "retries", "url", "version", "this", "callbacks", "done", "loading", "errors", "instance", "options", "Error", "JSON", "stringify", "status", "FAILURE", "SUCCESS", "LOADING", "INITIALIZED", "failed", "createUrl", "join", "deleteScript", "script", "document", "getElementById", "remove", "load", "loadPromise", "Promise", "resolve", "reject", "loadCallback", "err", "error", "window", "google", "importLibrary", "name", "execute", "maps", "fn", "push", "setScript", "_a", "_b", "callback", "params", "v", "forEach", "g", "h", "k", "p", "c", "l", "q", "m", "d", "r", "Set", "e", "URLSearchParams", "u", "f", "n", "__awaiter", "thisArg", "generator", "createElement", "set", "replace", "t", "toLowerCase", "src", "onerror", "querySelector", "head", "append", "P", "fulfilled", "value", "step", "next", "rejected", "result", "then", "apply", "console", "warn", "add", "libraryPromises", "map", "library", "all", "event", "ErrorEvent", "loadErrorCallback", "reset", "onerrorEvent", "resetIfRetryingFailed", "delay", "Math", "pow", "setTimeout", "cb", "GoogleProvider", "_AbstractProvider", "_this", "loader", "geocoder", "Geocoder", "_inheritsLoose", "AbstractProvider", "endpoint", "_ref", "parse", "response", "data", "results", "geometry", "location", "toJSON", "lat", "lng", "_r$geometry$location$", "_r$geometry$viewport$", "viewport", "x", "y", "label", "formatted_address", "bounds", "south", "west", "north", "east", "raw", "search", "geocode", "address", "query", "code", "message", "_this3", "_this2$geocoder2", "_temp2", "searchUrl", "getUrl", "southwest", "northeast", "items", "filter", "position", "reverseUrl", "host", "type", "format", "RequestType", "REVERSE", "Number", "lon", "display_name", "parseFloat", "boundingbox", "OpenStreetMapProvider", "formatted", "features", "bbox", "center", "place_name", "text", "coordinates", "properties", "lat1", "lon1", "lat2", "lon2"]
}
