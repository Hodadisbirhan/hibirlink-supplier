'use strict';

var jestDiffDefault = require('jest-diff');

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var jestDiffDefault__namespace = /*#__PURE__*/_interopNamespace(jestDiffDefault);

/* eslint-disable @typescript-eslint/ban-ts-comment -- this code needs to work
 * with multiple different versions of jest and it does verification of which
 * one is actually present but the other variants will cause errors, as is expected */
/* eslint-disable @typescript-eslint/prefer-ts-expect-error -- one of the
 * variants will always not be an error */
/* ignore typing for compatibility so it will seem "impossible" but different
 * version will yield different source */
/* istanbul ignore next: this is covered by integration tests */
const diffCandidates = [
    // @ts-ignore
    jestDiffDefault__namespace.default === null || jestDiffDefault__namespace.default === void 0 ? void 0 : jestDiffDefault__namespace.default.diff,
    // @ts-ignore
    jestDiffDefault__namespace.default,
    // @ts-ignore
    jestDiffDefault__namespace === null || jestDiffDefault__namespace === void 0 ? void 0 : jestDiffDefault__namespace.diff,
    // @ts-ignore
    jestDiffDefault__namespace,
];
const isFunction = (fn) => typeof fn === "function";
/* eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- assume
 * one of the candidate matches, there will be a reasonable error later on if
 * not */
const diff = diffCandidates.find(isFunction);

exports.diff = diff;
//# sourceMappingURL=jest-diff.js.map
